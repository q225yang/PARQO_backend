INFO:root:0
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='sequel'
    AND t.production_year = 1998 AND t.title LIKE '%Money%'
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.2654924381305757 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='sequel'", "t.production_year = 1998 AND t.title LIKE '%Money%'"]
INFO:root:Robust plan is 0: 54.907
INFO:root:Postgres plan: 51.67
INFO:root:1
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code = '[ru]'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year > 1990
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.8881261998620623 samples to be accurate, We have 50
INFO:root:Nearest query is 10
INFO:root:Current Query: ["cn.country_code = '[ru]'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", 't.production_year > 1990']
INFO:root:Robust plan is 4: 874.58
INFO:root:Postgres plan: 2343.959
INFO:root:2
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year BETWEEN 2000 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.3950677025924523 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 1: 1669.153
INFO:root:Postgres plan: 5456.198
INFO:root:3
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[nl]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2014
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.9999999999999996 samples to be accurate, We have 50
INFO:root:Nearest query is 11
INFO:root:Current Query: ["cn.country_code ='[nl]'", "k.keyword ='character-name-in-title'", 't.production_year > 2014']
INFO:root:Robust plan is 3: 140.428
INFO:root:Postgres plan: 124.672
INFO:root:4
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.episode_nr < 100
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.857106129404515 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", 't.episode_nr < 100']
INFO:root:Robust plan is 13: 1043.224
INFO:root:Postgres plan: 698.056
INFO:root:5
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.8407692811587163 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", 't.production_year > 2000']
INFO:root:Robust plan is 13: 1974.275
INFO:root:Postgres plan: 13317.473
INFO:root:6
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
    AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
    AND t.production_year >2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 9.086853085631736 samples to be accurate, We have 50
INFO:root:Nearest query is 15
INFO:root:Current Query: ["cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')", "k.keyword IN ('sequel', 'revenge', 'based-on-novel')", 't.production_year >2010']
INFO:root:Robust plan is 4: 2225.371
INFO:root:Postgres plan: 2305.123
INFO:root:7
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[jp]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000002 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["cn.country_code ='[jp]'", "k.keyword ='character-name-in-title'", 't.production_year > 2000']
INFO:root:Robust plan is 5: 619.508
INFO:root:Postgres plan: 1117.751
INFO:root:8
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='sequel'
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.5929489523934498 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='sequel'", 't.production_year > 2005']
INFO:root:Robust plan is 1: 995.458
INFO:root:Postgres plan: 1700.434
INFO:root:9
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='sequel'
    AND t.production_year BETWEEN 1950 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.1567109140301253 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='sequel'", 't.production_year BETWEEN 1950 AND 2010']
INFO:root:Robust plan is 1: 1540.605
INFO:root:Postgres plan: 5234.442
INFO:root:10
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[de]'
    AND k.keyword ='sequel'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.2226202976713685 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["cn.country_code ='[de]'", "k.keyword ='sequel'", 't.production_year > 2000']
INFO:root:Robust plan is 5: 532.006
INFO:root:Postgres plan: 707.055
INFO:root:11
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]' AND (cn.name LIKE '20th Century Fox%' OR cn.name LIKE 'Twentieth Century Fox%')
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.2534984139958696 samples to be accurate, We have 50
INFO:root:Nearest query is 10
INFO:root:Current Query: ["cn.country_code !='[pl]' AND (cn.name LIKE '20th Century Fox%' OR cn.name LIKE 'Twentieth Century Fox%')", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", 't.production_year > 2005']
INFO:root:Robust plan is 4: 1882.209
INFO:root:Postgres plan: 2214.164
INFO:root:12
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000007 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", 't.production_year > 2000']
INFO:root:Robust plan is 13: 3324.58
INFO:root:Postgres plan: 37042.342
INFO:root:13
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.name LIKE 'Lionsgate%'
    AND k.keyword = 'marvel-cinematic-universe'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 9
INFO:root:Current Query: ["cn.name LIKE 'Lionsgate%'", "k.keyword = 'marvel-cinematic-universe'", 't.production_year > 2000']
INFO:root:Robust plan is 0: 102.005
INFO:root:Postgres plan: 16.284
INFO:root:14
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[jp]'
    AND k.keyword IN ('murder', 'murder-in-title')
    AND t.production_year > 1950
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.33719636000329917 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["cn.country_code ='[jp]'", "k.keyword IN ('murder', 'murder-in-title')", 't.production_year > 1950']
INFO:root:Robust plan is 5: 879.512
INFO:root:Postgres plan: 2261.974
INFO:root:15
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND t.production_year > 2000
  AND (t.title LIKE '%Freddy%'
       OR t.title LIKE '%Jason%'
       OR t.title LIKE 'Saw%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.5808778503961095 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", "t.production_year > 2000\n  AND (t.title LIKE '%Freddy%'\n       OR t.title LIKE '%Jason%'\n       OR t.title LIKE 'Saw%')"]
INFO:root:Robust plan is 5: 393.216
INFO:root:Postgres plan: 369.693
INFO:root:16
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.2191460573681991 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')", 't.production_year > 2000']
INFO:root:Robust plan is 13: 1004.773
INFO:root:Postgres plan: 705.82
INFO:root:17
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.production_year BETWEEN 2005 AND 2008
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.6029540286667288 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", 't.production_year BETWEEN 2005 AND 2008']
INFO:root:Robust plan is 13: 1314.097
INFO:root:Postgres plan: 5127.999
INFO:root:18
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[jp]'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND t.episode_nr >= 5 AND t.episode_nr < 100
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.2472830516271438 samples to be accurate, We have 50
INFO:root:Nearest query is 12
INFO:root:Current Query: ["cn.country_code ='[jp]'", "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", 't.episode_nr >= 5 AND t.episode_nr < 100']
INFO:root:Robust plan is 7: 624.333
INFO:root:Postgres plan: 418.443
INFO:root:19
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
    AND k.keyword ='sequel'
    AND t.title = 'Shrek 2'
  AND t.production_year BETWEEN 2000 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 3.0593317370084727 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')", "k.keyword ='sequel'", "t.title = 'Shrek 2'\n  AND t.production_year BETWEEN 2000 AND 2010"]
INFO:root:Robust plan is 0: 62.307
INFO:root:Postgres plan: 59.517
INFO:root:20
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0094141324542403 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year > 2005']
INFO:root:Robust plan is 1: 1425.672
INFO:root:Postgres plan: 3319.743
INFO:root:21
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.34154673841624006 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", 't.production_year > 2000']
INFO:root:Robust plan is 13: 2229.175
INFO:root:Postgres plan: 19742.732
INFO:root:22
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.name LIKE 'Lionsgate%'
    AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 9.245008157372233 samples to be accurate, We have 50
INFO:root:Nearest query is 9
INFO:root:Current Query: ["cn.name LIKE 'Lionsgate%'", "k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')", 't.production_year > 2005']
INFO:root:Robust plan is 0: 263.677
INFO:root:Postgres plan: 322.522
INFO:root:23
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword = 'marvel-cinematic-universe'
    AND t.production_year >2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.7664629935628305 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword = 'marvel-cinematic-universe'", 't.production_year >2010']
INFO:root:Robust plan is 1: 602.076
INFO:root:Postgres plan: 52.656
INFO:root:24
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.title != '' AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.9871271044703347 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", "t.title != '' AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%')"]
INFO:root:Robust plan is 0: 141.692
INFO:root:Postgres plan: 140.784
INFO:root:25
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 8269.746866010822 samples to be accurate, We have 50
INFO:root:26
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword LIKE '%sequel%'
    AND t.production_year >2000 AND (t.title LIKE 'Birdemic%' OR t.title LIKE '%Movie%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.47158925740453433 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword LIKE '%sequel%'", "t.production_year >2000 AND (t.title LIKE 'Birdemic%' OR t.title LIKE '%Movie%')"]
INFO:root:Robust plan is 5: 107.7
INFO:root:Postgres plan: 114.188
INFO:root:27
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year BETWEEN 1980 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.16305843781366536 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year BETWEEN 1980 AND 2010']
INFO:root:Robust plan is 0: 3128.04
INFO:root:Postgres plan: 9535.962
INFO:root:28
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2000
  AND (t.title LIKE '%Freddy%'
       OR t.title LIKE '%Jason%'
       OR t.title LIKE 'Saw%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", "t.production_year > 2000\n  AND (t.title LIKE '%Freddy%'\n       OR t.title LIKE '%Jason%'\n       OR t.title LIKE 'Saw%')"]
INFO:root:Robust plan is 0: 155.683
INFO:root:Postgres plan: 155.73
INFO:root:29
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='10,000-mile-club'
    AND t.production_year > 2014
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 14.58215013122889 samples to be accurate, We have 50
INFO:root:Nearest query is 6
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='10,000-mile-club'", 't.production_year > 2014']
INFO:root:Robust plan is 2: 19.299
INFO:root:Postgres plan: 15.854
INFO:root:30
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.033749708388937316 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", 't.production_year > 2000']
INFO:root:Robust plan is 1: 3250.653
INFO:root:Postgres plan: 19895.151
INFO:root:31
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 244.01626254997527 samples to be accurate, We have 50
INFO:root:Nearest query is 15
INFO:root:Current Query: ["cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')", "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", "t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')"]
INFO:root:Robust plan is 4: 257.476
INFO:root:Postgres plan: 253.555
INFO:root:32
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2014
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 4.021355943027842 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year > 2014']
INFO:root:Robust plan is 0: 128.527
INFO:root:Postgres plan: 124.941
INFO:root:33
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword = 'marvel-cinematic-universe'
    AND t.production_year > 2008
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.881505024818247 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword = 'marvel-cinematic-universe'", 't.production_year > 2008']
INFO:root:Robust plan is 1: 621.024
INFO:root:Postgres plan: 51.66
INFO:root:34
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
  AND cn.name = 'DreamWorks Animation'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000002 samples to be accurate, We have 50
INFO:root:Nearest query is 13
INFO:root:Current Query: ["cn.country_code ='[us]'\n  AND cn.name = 'DreamWorks Animation'", "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", 't.production_year > 2005']
INFO:root:Robust plan is 0: 35.473
INFO:root:Postgres plan: 36.282
INFO:root:35
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='sequel'
    AND t.production_year BETWEEN 1980 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0146451116660835 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='sequel'", 't.production_year BETWEEN 1980 AND 2010']
INFO:root:Robust plan is 1: 1516.909
INFO:root:Postgres plan: 4426.754
INFO:root:36
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code = '[us]' AND cn.name = 'YouTube'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.title != '' AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.9999999999999997 samples to be accurate, We have 50
INFO:root:Nearest query is 16
INFO:root:Current Query: ["cn.country_code = '[us]' AND cn.name = 'YouTube'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "t.title != '' AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%')"]
INFO:root:Robust plan is 0: 37.222
INFO:root:Postgres plan: 38.572
INFO:root:37
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]' AND (cn.name LIKE '20th Century Fox%' OR cn.name LIKE 'Twentieth Century Fox%')
    AND k.keyword ='sequel'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.6229289743458495 samples to be accurate, We have 50
INFO:root:Nearest query is 9
INFO:root:Current Query: ["cn.country_code !='[pl]' AND (cn.name LIKE '20th Century Fox%' OR cn.name LIKE 'Twentieth Century Fox%')", "k.keyword ='sequel'", 't.production_year > 2000']
INFO:root:Robust plan is 0: 1031.964
INFO:root:Postgres plan: 586.973
INFO:root:38
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year > 1990
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.7223816632523422 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword LIKE '%sequel%'", 't.production_year > 1990']
INFO:root:Robust plan is 13: 1433.195
INFO:root:Postgres plan: 5938.293
INFO:root:39
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.2694469077885024 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", 't.production_year > 2000']
INFO:root:Robust plan is 13: 2231.531
INFO:root:Postgres plan: 19771.772
INFO:root:40
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.119066165494375 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", 't.production_year > 2000']
INFO:root:Robust plan is 13: 2291.98
INFO:root:Postgres plan: 20177.928
INFO:root:41
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[sm]'
    AND k.keyword ='sequel'
    AND t.production_year >2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 6.264097178306735 samples to be accurate, We have 50
INFO:root:Nearest query is 9
INFO:root:Current Query: ["cn.country_code ='[sm]'", "k.keyword ='sequel'", 't.production_year >2010']
INFO:root:Robust plan is 0: 27.023
INFO:root:Postgres plan: 55.571
INFO:root:42
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND t.production_year >2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 5.304832354953485 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", 't.production_year >2010']
INFO:root:Robust plan is 13: 1351.852
INFO:root:Postgres plan: 2895.631
INFO:root:43
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword ='sequel'
    AND t.production_year BETWEEN 2007 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 3.4964073896379615 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword ='sequel'", 't.production_year BETWEEN 2007 AND 2010']
INFO:root:Robust plan is 1: 826.549
INFO:root:Postgres plan: 805.273
INFO:root:44
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
  AND cn.name = 'DreamWorks Animation'
    AND k.keyword IN ('murder', 'murder-in-title')
    AND t.production_year BETWEEN 2000 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 14
INFO:root:Current Query: ["cn.country_code ='[us]'\n  AND cn.name = 'DreamWorks Animation'", "k.keyword IN ('murder', 'murder-in-title')", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 0: 211.179
INFO:root:Postgres plan: 203.797
INFO:root:45
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword = 'computer-animation'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.4112264470232137 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword = 'computer-animation'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 689.767
INFO:root:Postgres plan: 339.928
INFO:root:46
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND t.production_year BETWEEN 1980 AND 1984
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 19.02598342690615 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", 't.production_year BETWEEN 1980 AND 1984']
INFO:root:Robust plan is 13: 1276.54
INFO:root:Postgres plan: 3813.311
INFO:root:47
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
  AND cn.name = 'DreamWorks Animation'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.title = 'Shrek 2'
  AND t.production_year BETWEEN 2000 AND 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000009 samples to be accurate, We have 50
INFO:root:Nearest query is 17
INFO:root:Current Query: ["cn.country_code ='[us]'\n  AND cn.name = 'DreamWorks Animation'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "t.title = 'Shrek 2'\n  AND t.production_year BETWEEN 2000 AND 2005"]
INFO:root:Robust plan is 0: 163.452
INFO:root:Postgres plan: 160.806
INFO:root:48
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.production_year > 2014
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.798335658148728 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", 't.production_year > 2014']
INFO:root:Robust plan is 5: 108.396
INFO:root:Postgres plan: 107.201
INFO:root:49
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.4939767672478392 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword ='character-name-in-title'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 1817.743
INFO:root:Postgres plan: 4921.363
INFO:root:50
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[de]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.3619535915894334 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["cn.country_code ='[de]'", "k.keyword ='character-name-in-title'", 't.production_year > 2000']
INFO:root:Robust plan is 5: 768.286
INFO:root:Postgres plan: 1676.78
INFO:root:51
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year BETWEEN 2005 AND 2008
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.421520544313623 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year BETWEEN 2005 AND 2008']
INFO:root:Robust plan is 1: 1316.982
INFO:root:Postgres plan: 2305.058
INFO:root:52
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
    AND t.production_year BETWEEN 2000 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 5.031104981133219 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 1: 4493.894
INFO:root:Postgres plan: 25900.59
INFO:root:53
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code != '[us]'
    AND k.keyword = 'marvel-cinematic-universe'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.1302785525812216 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code != '[us]'", "k.keyword = 'marvel-cinematic-universe'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 623.203
INFO:root:Postgres plan: 88.999
INFO:root:54
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='sequel'
    AND t.production_year BETWEEN 2000 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.6868658866238542 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='sequel'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 1: 1109.224
INFO:root:Postgres plan: 2313.935
INFO:root:55
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[sm]'
    AND k.keyword ='sequel'
    AND t.production_year BETWEEN 2008 AND 2014
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.5953404085613649 samples to be accurate, We have 50
INFO:root:Nearest query is 9
INFO:root:Current Query: ["cn.country_code ='[sm]'", "k.keyword ='sequel'", 't.production_year BETWEEN 2008 AND 2014']
INFO:root:Robust plan is 0: 27.121
INFO:root:Postgres plan: 65.976
INFO:root:56
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code != '[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year BETWEEN 2005 AND 2015
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.725575861134036 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code != '[us]'", "k.keyword ='character-name-in-title'", 't.production_year BETWEEN 2005 AND 2015']
INFO:root:Robust plan is 1: 2130.196
INFO:root:Postgres plan: 8772.946
INFO:root:57
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.production_year > 1990
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 4.0565246713332845 samples to be accurate, We have 50
INFO:root:Nearest query is 12
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", 't.production_year > 1990']
INFO:root:Robust plan is 7: 4261.942
INFO:root:Postgres plan: 16915.839
INFO:root:58
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year > 1950
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 3.741005043416705 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword LIKE '%sequel%'", 't.production_year > 1950']
INFO:root:Robust plan is 13: 1654.159
INFO:root:Postgres plan: 7931.569
INFO:root:59
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.name LIKE 'Lionsgate%'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.9999999999999999 samples to be accurate, We have 50
INFO:root:Nearest query is 10
INFO:root:Current Query: ["cn.name LIKE 'Lionsgate%'", "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", 't.production_year > 2000']
INFO:root:Robust plan is 4: 343.921
INFO:root:Postgres plan: 377.453
INFO:root:60
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year > 2010
  AND t.title LIKE 'Kung Fu Panda%'
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.413106458190218 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword LIKE '%sequel%'", "t.production_year > 2010\n  AND t.title LIKE 'Kung Fu Panda%'"]
INFO:root:Robust plan is 3: 91.953
INFO:root:Postgres plan: 73.631
INFO:root:61
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND t.production_year BETWEEN 2007 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 6.851589927758729 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", 't.production_year BETWEEN 2007 AND 2010']
INFO:root:Robust plan is 13: 2097.038
INFO:root:Postgres plan: 15963.957
INFO:root:62
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword LIKE '%sequel%'
    AND t.episode_nr < 100
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 293.3021149520147 samples to be accurate, We have 50
INFO:root:Nearest query is 12
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword LIKE '%sequel%'", 't.episode_nr < 100']
INFO:root:Robust plan is 7: 336.747
INFO:root:Postgres plan: 81.965
INFO:root:63
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND t.production_year BETWEEN 1980 AND 1984
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 11.449675677499268 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", 't.production_year BETWEEN 1980 AND 1984']
INFO:root:Robust plan is 13: 1145.984
INFO:root:Postgres plan: 979.354
INFO:root:64
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[jp]'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.8011770448303885 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["cn.country_code ='[jp]'", "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", 't.production_year > 2005']
INFO:root:Robust plan is 5: 915.585
INFO:root:Postgres plan: 2382.546
INFO:root:65
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[nl]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year BETWEEN 2007 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 3.790129769039233 samples to be accurate, We have 50
INFO:root:Nearest query is 8
INFO:root:Current Query: ["cn.country_code ='[nl]'", "k.keyword LIKE '%sequel%'", 't.production_year BETWEEN 2007 AND 2010']
INFO:root:Robust plan is 7: 691.813
INFO:root:Postgres plan: 758.185
INFO:root:66
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.production_year BETWEEN 1980 AND 1995
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.091912273123709 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", 't.production_year BETWEEN 1980 AND 1995']
INFO:root:Robust plan is 13: 1427.939
INFO:root:Postgres plan: 4899.561
INFO:root:67
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code = '[ru]'
    AND k.keyword ='sequel'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 8
INFO:root:Current Query: ["cn.country_code = '[ru]'", "k.keyword ='sequel'", 't.production_year > 2000']
INFO:root:Robust plan is 7: 326.072
INFO:root:Postgres plan: 301.546
INFO:root:68
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND t.production_year >2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 3.0600035019799408 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", 't.production_year >2010']
INFO:root:Robust plan is 13: 1427.41
INFO:root:Postgres plan: 5854.288
INFO:root:69
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND t.title != '' AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.6544638266950907 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", "t.title != '' AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%')"]
INFO:root:Robust plan is 5: 186.452
INFO:root:Postgres plan: 179.964
INFO:root:70
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year > 2000
  AND (t.title LIKE '%Freddy%'
       OR t.title LIKE '%Jason%'
       OR t.title LIKE 'Saw%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000002 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword LIKE '%sequel%'", "t.production_year > 2000\n  AND (t.title LIKE '%Freddy%'\n       OR t.title LIKE '%Jason%'\n       OR t.title LIKE 'Saw%')"]
INFO:root:Robust plan is 5: 114.458
INFO:root:Postgres plan: 110.716
INFO:root:71
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword LIKE '%sequel%'
    AND t.production_year > 2009
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 28.41897125954525 samples to be accurate, We have 50
INFO:root:Nearest query is 12
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword LIKE '%sequel%'", 't.production_year > 2009']
INFO:root:Robust plan is 7: 637.586
INFO:root:Postgres plan: 1114.131
INFO:root:72
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND t.production_year > 1950
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.3011064646509612 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", 't.production_year > 1950']
INFO:root:Robust plan is 13: 3273.305
INFO:root:Postgres plan: 30246.646
INFO:root:73
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[jp]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000002 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["cn.country_code ='[jp]'", "k.keyword ='character-name-in-title'", 't.production_year > 2000']
INFO:root:Robust plan is 5: 706.677
INFO:root:Postgres plan: 1233.962
INFO:root:74
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year BETWEEN 2005 AND 2015
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.33456050729966874 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year BETWEEN 2005 AND 2015']
INFO:root:Robust plan is 0: 1764.509
INFO:root:Postgres plan: 4029.243
INFO:root:75
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[jp]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year BETWEEN 1950 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 12
INFO:root:Current Query: ["cn.country_code ='[jp]'", "k.keyword LIKE '%sequel%'", 't.production_year BETWEEN 1950 AND 2010']
INFO:root:Robust plan is 7: 677.861
INFO:root:Postgres plan: 1494.861
INFO:root:76
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.7021133651478443 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword LIKE '%sequel%'", 't.production_year > 2000']
INFO:root:Robust plan is 13: 1318.256
INFO:root:Postgres plan: 4174.481
INFO:root:77
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year BETWEEN 2005 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.8346066373982233 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year BETWEEN 2005 AND 2010']
INFO:root:Robust plan is 1: 1500.176
INFO:root:Postgres plan: 3245.408
INFO:root:78
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.4227821518114463 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword ='character-name-in-title'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 1904.255
INFO:root:Postgres plan: 5234.236
INFO:root:79
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 7.528288142192193 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", 't.production_year > 2000']
INFO:root:Robust plan is 13: 2450.227
INFO:root:Postgres plan: 22268.645
INFO:root:80
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year > 2014
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 13.024281112144024 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword LIKE '%sequel%'", 't.production_year > 2014']
INFO:root:Robust plan is 3: 94.076
INFO:root:Postgres plan: 67.375
INFO:root:81
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND t.production_year BETWEEN 1980 AND 2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.6813064624101 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", 't.production_year BETWEEN 1980 AND 2010']
INFO:root:Robust plan is 1: 4183.534
INFO:root:Postgres plan: 24076.79
INFO:root:82
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code = '[us]' AND cn.name = 'YouTube'
    AND k.keyword ='character-name-in-title'
    AND t.production_year = 1998
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 74.04623622762745 samples to be accurate, We have 50
INFO:root:Nearest query is 13
INFO:root:Current Query: ["cn.country_code = '[us]' AND cn.name = 'YouTube'", "k.keyword ='character-name-in-title'", 't.production_year = 1998']
INFO:root:Robust plan is 0: 39.914
INFO:root:Postgres plan: 139.235
INFO:root:83
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.133688001992145 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword LIKE '%sequel%'", 't.production_year > 2000']
INFO:root:Robust plan is 13: 1314.757
INFO:root:Postgres plan: 4172.587
INFO:root:84
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'murder-in-title')
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 3.842367223350019 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'murder-in-title')", 't.production_year > 2005']
INFO:root:Robust plan is 1: 1704.421
INFO:root:Postgres plan: 5234.053
INFO:root:85
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.8391990211068613 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year > 2005']
INFO:root:Robust plan is 0: 1610.768
INFO:root:Postgres plan: 3539.316
INFO:root:86
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[sm]'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year BETWEEN 2006 AND 2007 AND (t.title LIKE 'One Piece%' OR t.title LIKE 'Dragon Ball Z%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 340.95963771583786 samples to be accurate, We have 50
INFO:root:Nearest query is 16
INFO:root:Current Query: ["cn.country_code ='[sm]'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "t.production_year BETWEEN 2006 AND 2007 AND (t.title LIKE 'One Piece%' OR t.title LIKE 'Dragon Ball Z%')"]
INFO:root:Robust plan is 0: 30.408
INFO:root:Postgres plan: 150.897
INFO:root:87
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.2066378934427267 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.production_year > 2005']
INFO:root:Robust plan is 1: 1522.062
INFO:root:Postgres plan: 3491.613
INFO:root:88
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.2823239686433252 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code !='[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')", "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", 't.production_year > 2000']
INFO:root:Robust plan is 13: 2247.694
INFO:root:Postgres plan: 16166.613
INFO:root:89
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.production_year > 2010
  AND t.title LIKE 'Vampire%'
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.007195185109993783 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "t.production_year > 2010\n  AND t.title LIKE 'Vampire%'"]
INFO:root:Robust plan is 0: 141.142
INFO:root:Postgres plan: 147.742
INFO:root:90
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='sequel'
    AND t.production_year > 2000
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.9999999999999998 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='sequel'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 1150.21
INFO:root:Postgres plan: 2695.168
INFO:root:91
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword LIKE '%sequel%'
    AND t.production_year = 1998 AND t.title LIKE '%Money%'
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword LIKE '%sequel%'", "t.production_year = 1998 AND t.title LIKE '%Money%'"]
INFO:root:Robust plan is 3: 102.166
INFO:root:Postgres plan: 62.55
INFO:root:92
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword ='sequel'
    AND t.production_year >2010
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 11.506991173495328 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword ='sequel'", 't.production_year >2010']
INFO:root:Robust plan is 0: 386.696
INFO:root:Postgres plan: 556.655
INFO:root:93
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword ='character-name-in-title'
    AND t.episode_nr < 100
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 2.6031488889221164 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword ='character-name-in-title'", 't.episode_nr < 100']
INFO:root:Robust plan is 1: 1118.968
INFO:root:Postgres plan: 1366.127
INFO:root:94
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'murder-in-title')
    AND t.production_year > 1990
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 81.1577276640329 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'murder-in-title')", 't.production_year > 1990']
INFO:root:Robust plan is 13: 1840.838
INFO:root:Postgres plan: 11087.233
INFO:root:95
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code = '[ru]'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND t.production_year = 1998
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 0.9999999999999993 samples to be accurate, We have 50
INFO:root:Nearest query is 15
INFO:root:Current Query: ["cn.country_code = '[ru]'", "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", 't.production_year = 1998']
INFO:root:Robust plan is 4: 124.871
INFO:root:Postgres plan: 126.807
INFO:root:96
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%'
       OR cn.name LIKE '%Warner%')
    AND k.keyword ='character-name-in-title'
    AND t.production_year > 2005
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 1.9897174731923903 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["cn.country_code !='[pl]'\n  AND (cn.name LIKE '%Film%'\n       OR cn.name LIKE '%Warner%')", "k.keyword ='character-name-in-title'", 't.production_year > 2005']
INFO:root:Robust plan is 1: 1413.873
INFO:root:Postgres plan: 3061.411
INFO:root:97
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND t.episode_nr < 100
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 6.004752923152488 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", 't.episode_nr < 100']
INFO:root:Robust plan is 0: 732.209
INFO:root:Postgres plan: 1301.56
INFO:root:98
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code = '[ru]'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND t.title != '' AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 360275.8836762821 samples to be accurate, We have 50
INFO:root:99
INFO:root:
    SELECT MIN(an.name) AS cool_actor_pseudonym,
       MIN(t.title) AS series_named_after_char
    FROM aka_name AS an,
        cast_info AS ci,
        company_name AS cn,
        keyword AS k,
        movie_companies AS mc,
        movie_keyword AS mk,
        name AS n,
        title AS t
    WHERE cn.country_code ='[us]'
    AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
    AND t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')
    AND an.person_id = n.id
    AND n.id = ci.person_id
    AND ci.movie_id = t.id
    AND t.id = mk.movie_id
    AND mk.keyword_id = k.id
    AND t.id = mc.movie_id
    AND mc.company_id = cn.id
    AND an.person_id = ci.person_id
    AND ci.movie_id = mc.movie_id
    AND ci.movie_id = mk.movie_id
    AND mc.movie_id = mk.movie_id;
INFO:root:--- PQO: Need 70.00529654121364 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["cn.country_code ='[us]'", "k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')", "t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')"]
INFO:root:Robust plan is 0: 59.242
INFO:root:Postgres plan: 29.976
