INFO:root:0
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.735085806070694 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'genres', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2075.209
INFO:root:Postgres plan: 6490.344
INFO:root:1
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.6601720861990485 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 990.738
INFO:root:Postgres plan: 12554.365
INFO:root:2
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7135239664082933 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 153.444
INFO:root:Postgres plan: 12576.861
INFO:root:3
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note ='(voice: English version)'
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.18664467711677463 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["ci.note ='(voice: English version)'", 'countries', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 8: 251.379
INFO:root:Postgres plan: 5245.959
INFO:root:4
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.4192016695147806 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 153.17
INFO:root:Postgres plan: 13467.139
INFO:root:5
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'votes'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 17.753877339350154 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'votes', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 3: 1387.183
INFO:root:Postgres plan: 5793.903
INFO:root:6
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 19.200507434652486 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 3: 1484.321
INFO:root:Postgres plan: 13104.039
INFO:root:7
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name_pcode_cf LIKE 'D%' AND n.gender='m'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name_pcode_cf LIKE 'D%' AND n.gender='m'"]
INFO:root:Robust plan is 3: 1290.594
INFO:root:Postgres plan: 12582.264
INFO:root:8
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note = '(voice)'
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%Angel%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 5.108589672389718 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note = '(voice)'", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%Angel%'"]
INFO:root:Robust plan is 9: 184.401
INFO:root:Postgres plan: 11543.582
INFO:root:9
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name_pcode_cf LIKE 'D%' AND n.gender='m'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.8774949875110076 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.name_pcode_cf LIKE 'D%' AND n.gender='m'"]
INFO:root:Robust plan is 3: 1061.024
INFO:root:Postgres plan: 12656.141
INFO:root:10
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note ='(voice: English version)'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["ci.note ='(voice: English version)'", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 8: 154.228
INFO:root:Postgres plan: 10849.864
INFO:root:11
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.43092139476623575 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 3: 1244.143
INFO:root:Postgres plan: 13482.512
INFO:root:12
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(producer)', '(executive producer)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.02393955460647827 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(producer)', '(executive producer)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 3: 1588.048
INFO:root:Postgres plan: 14768.57
INFO:root:13
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'bottom 10 rank'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.3142419713060765 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'bottom 10 rank', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 3: 945.994
INFO:root:Postgres plan: 89.234
INFO:root:14
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.360554673326608 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2029.779
INFO:root:Postgres plan: 6011.098
INFO:root:15
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(producer)', '(executive producer)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(producer)', '(executive producer)')", 'genres', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 1: 1160.94
INFO:root:Postgres plan: 6390.707
INFO:root:16
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.7616620102664884 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'votes', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 3: 986.943
INFO:root:Postgres plan: 6263.972
INFO:root:17
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999992 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 1963.498
INFO:root:Postgres plan: 5889.489
INFO:root:18
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.4371785850450776 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 7: 1927.871
INFO:root:Postgres plan: 5930.558
INFO:root:19
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.4996254572420991 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 184.501
INFO:root:Postgres plan: 5858.509
INFO:root:20
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.4961445688596395 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 3: 977.23
INFO:root:Postgres plan: 5671.723
INFO:root:21
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.37938291812217867 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 1: 1295.226
INFO:root:Postgres plan: 12842.407
INFO:root:22
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%Angel%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7730699182977235 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'votes', "n.gender ='f' AND n.name LIKE '%Angel%'"]
INFO:root:Robust plan is 9: 180.357
INFO:root:Postgres plan: 5944.197
INFO:root:23
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'budget'
    AND it2.info = 'rating'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'B%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 9.907922239728265 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'budget', 'rating', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'B%'))"]
INFO:root:Robust plan is 3: 1416.034
INFO:root:Postgres plan: 2652.234
INFO:root:24
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.25904130139545156 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'rating', "n.gender ='f'"]
INFO:root:Robust plan is 7: 1953.283
INFO:root:Postgres plan: 5831.817
INFO:root:25
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender IS NOT NULL AND n.gender = 'f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7180416057154808 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender IS NOT NULL AND n.gender = 'f'"]
INFO:root:Robust plan is 7: 2182.264
INFO:root:Postgres plan: 12624.614
INFO:root:26
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.484745859712933 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 1029.376
INFO:root:Postgres plan: 12533.726
INFO:root:27
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.8001884488087455 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'release dates', 'votes', "n.gender ='f'"]
INFO:root:Robust plan is 7: 2140.279
INFO:root:Postgres plan: 13193.992
INFO:root:28
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.127556723382003 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 1: 974.873
INFO:root:Postgres plan: 5991.884
INFO:root:29
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'budget'
    AND it2.info = 'bottom 10 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.2083896326541748 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'budget', 'bottom 10 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 739.11
INFO:root:Postgres plan: 90.853
INFO:root:30
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 7.081169917224427 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'votes', "n.gender ='f'"]
INFO:root:Robust plan is 7: 1989.162
INFO:root:Postgres plan: 6105.997
INFO:root:31
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE '%Bert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999999 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.name LIKE '%Bert%'"]
INFO:root:Robust plan is 9: 173.045
INFO:root:Postgres plan: 6122.366
INFO:root:32
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7543503207103718 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 997.625
INFO:root:Postgres plan: 5657.09
INFO:root:33
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'B%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 15.784402016170345 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name LIKE 'B%'"]
INFO:root:Robust plan is 3: 1187.842
INFO:root:Postgres plan: 6062.324
INFO:root:34
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'budget'
    AND it2.info = 'top 250 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0005608925021654 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'budget', 'top 250 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 765.067
INFO:root:Postgres plan: 201.251
INFO:root:35
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.40233149466076057 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 294.785
INFO:root:Postgres plan: 12619.159
INFO:root:36
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.6928557440725018 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2040.131
INFO:root:Postgres plan: 12988.479
INFO:root:37
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.4881112722823206 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2000.612
INFO:root:Postgres plan: 5996.699
INFO:root:38
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.278042611660032 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 151.847
INFO:root:Postgres plan: 12627.287
INFO:root:39
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender IS NOT NULL AND n.gender = 'f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 28.719608944760516 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.gender IS NOT NULL AND n.gender = 'f'"]
INFO:root:Robust plan is 3: 1581.513
INFO:root:Postgres plan: 12949.589
INFO:root:40
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'bottom 10 rank'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.1028557400173724 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'bottom 10 rank', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 150.95
INFO:root:Postgres plan: 97.067
INFO:root:41
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0505889111869344 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 3: 1014.941
INFO:root:Postgres plan: 12710.376
INFO:root:42
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.7752680222252897 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 187.12
INFO:root:Postgres plan: 13142.737
INFO:root:43
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.2300411420451804 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 180.359
INFO:root:Postgres plan: 12493.526
INFO:root:44
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.name LIKE 'X%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'votes', "n.name LIKE 'X%'"]
INFO:root:Robust plan is 9: 137.096
INFO:root:Postgres plan: 5892.292
INFO:root:45
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Angel%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.3867645693385296 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.gender ='f' AND n.name LIKE '%Angel%'"]
INFO:root:Robust plan is 9: 183.059
INFO:root:Postgres plan: 6534.987
INFO:root:46
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note = '(voice)'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE 'Z%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.582215773287202 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note = '(voice)'", 'release dates', 'rating', "n.name LIKE 'Z%'"]
INFO:root:Robust plan is 3: 779.839
INFO:root:Postgres plan: 11556.675
INFO:root:47
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE '%Bert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999991 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.name LIKE '%Bert%'"]
INFO:root:Robust plan is 9: 175.931
INFO:root:Postgres plan: 6113.287
INFO:root:48
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.0962578076048253 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 154.22
INFO:root:Postgres plan: 6001.779
INFO:root:49
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'top 250 rank'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 44.61165461538438 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'top 250 rank', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 7: 1406.589
INFO:root:Postgres plan: 209.917
INFO:root:50
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note ='(voice: English version)'
    AND it1.info = 'release dates'
    AND it2.info = 'bottom 10 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 62.95257452351217 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["ci.note ='(voice: English version)'", 'release dates', 'bottom 10 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 4: 557.766
INFO:root:Postgres plan: 98.624
INFO:root:51
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'B%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.14343638293753855 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'genres', 'rating', "n.name LIKE 'B%'"]
INFO:root:Robust plan is 7: 1949.658
INFO:root:Postgres plan: 6557.938
INFO:root:52
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(voice)%' AND ci.note LIKE '%(uncredited)%'
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.000000000000001 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["ci.note LIKE '%(voice)%' AND ci.note LIKE '%(uncredited)%'", 'genres', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 4: 747.524
INFO:root:Postgres plan: 5584.061
INFO:root:53
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'budget'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9043731790931252 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'budget', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 1962.696
INFO:root:Postgres plan: 2581.538
INFO:root:54
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'top 250 rank'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 6.9047974578673665 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'top 250 rank', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 182.692
INFO:root:Postgres plan: 617.711
INFO:root:55
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'top 250 rank'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.2793033655990218 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'top 250 rank', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 153.072
INFO:root:Postgres plan: 215.717
INFO:root:56
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'votes'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.1328891620200736 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'votes', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 1: 1017.773
INFO:root:Postgres plan: 5709.199
INFO:root:57
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 154.292
INFO:root:Postgres plan: 12809.28
INFO:root:58
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 8.75252930659738 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 186.222
INFO:root:Postgres plan: 12576.35
INFO:root:59
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0525113468486669 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2038.91
INFO:root:Postgres plan: 13191.02
INFO:root:60
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.331344589286064 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 3: 1008.802
INFO:root:Postgres plan: 12617.56
INFO:root:61
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'Z%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.206407616636453 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name LIKE 'Z%'"]
INFO:root:Robust plan is 3: 1027.013
INFO:root:Postgres plan: 6348.246
INFO:root:62
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender IS NOT NULL AND n.gender = 'f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.1990887091967863 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender IS NOT NULL AND n.gender = 'f'"]
INFO:root:Robust plan is 7: 2097.74
INFO:root:Postgres plan: 12657.635
INFO:root:63
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.48299572807424 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 9: 209.058
INFO:root:Postgres plan: 13041.63
INFO:root:64
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.name LIKE 'X%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999998 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'rating', "n.name LIKE 'X%'"]
INFO:root:Robust plan is 9: 136.454
INFO:root:Postgres plan: 5678.076
INFO:root:65
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note ='(voice: English version)'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["ci.note ='(voice: English version)'", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 8: 151.237
INFO:root:Postgres plan: 10822.404
INFO:root:66
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'genres'
    AND it2.info = 'bottom 10 rank'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5489280192336556 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'genres', 'bottom 10 rank', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 8: 148.64
INFO:root:Postgres plan: 101.661
INFO:root:67
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Angel%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.411154499677655 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%Angel%'"]
INFO:root:Robust plan is 9: 179.876
INFO:root:Postgres plan: 12748.272
INFO:root:68
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.47392158734784734 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'votes', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 997.939
INFO:root:Postgres plan: 5932.901
INFO:root:69
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2055.89
INFO:root:Postgres plan: 13525.74
INFO:root:70
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note = '(voice)'
    AND it1.info = 'genres'
    AND it2.info = 'top 250 rank'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.2500655549708832 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note = '(voice)'", 'genres', 'top 250 rank', "n.gender ='f'"]
INFO:root:Robust plan is 7: 1179.186
INFO:root:Postgres plan: 223.054
INFO:root:71
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.148742465269802 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.gender ='f'"]
INFO:root:Robust plan is 7: 2126.308
INFO:root:Postgres plan: 12762.293
INFO:root:72
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.301775122151811 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 3: 1037.589
INFO:root:Postgres plan: 12638.271
INFO:root:73
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5091030329871977 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 9: 206.19
INFO:root:Postgres plan: 12554.485
INFO:root:74
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.18498497227474217 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 7: 2057.665
INFO:root:Postgres plan: 13615.327
INFO:root:75
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6256121974299352 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2008.295
INFO:root:Postgres plan: 6006.415
INFO:root:76
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.2326266115229993 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 285.711
INFO:root:Postgres plan: 12583.161
INFO:root:77
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.4642838329924325 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'genres', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2037.923
INFO:root:Postgres plan: 6449.956
INFO:root:78
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'votes'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7484003351485133 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'votes', "n.gender ='f'"]
INFO:root:Robust plan is 7: 2073.62
INFO:root:Postgres plan: 5724.258
INFO:root:79
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'X%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7486365686894044 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.name LIKE 'X%'"]
INFO:root:Robust plan is 3: 1207.433
INFO:root:Postgres plan: 5831.425
INFO:root:80
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note = '(voice)'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender IS NOT NULL AND n.gender = 'f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 122.80480365203562 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note = '(voice)'", 'release dates', 'rating', "n.gender IS NOT NULL AND n.gender = 'f'"]
INFO:root:Robust plan is 3: 1248.708
INFO:root:Postgres plan: 11813.235
INFO:root:81
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'bottom 10 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6386579890176549 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'bottom 10 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 254.599
INFO:root:Postgres plan: 96.488
INFO:root:82
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.000000000000001 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 150.538
INFO:root:Postgres plan: 12516.006
INFO:root:83
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.7842829931266313 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 151.193
INFO:root:Postgres plan: 13463.207
INFO:root:84
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.421997860282962 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 182.971
INFO:root:Postgres plan: 12722.844
INFO:root:85
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Bert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.3031201512505959 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Bert%'"]
INFO:root:Robust plan is 9: 168.606
INFO:root:Postgres plan: 12647.153
INFO:root:86
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.03381388792040386 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 1: 1331.228
INFO:root:Postgres plan: 6119.518
INFO:root:87
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'B%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 17.570098806558512 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name LIKE 'B%'"]
INFO:root:Robust plan is 3: 1207.694
INFO:root:Postgres plan: 6056.663
INFO:root:88
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.name LIKE '%B%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6895083165822153 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'rating', "n.name LIKE '%B%'"]
INFO:root:Robust plan is 7: 2014.782
INFO:root:Postgres plan: 5789.354
INFO:root:89
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'votes'
    AND n.name_pcode_cf LIKE 'D%' AND n.gender='m'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.2026926607019954 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'votes', "n.name_pcode_cf LIKE 'D%' AND n.gender='m'"]
INFO:root:Robust plan is 3: 1066.375
INFO:root:Postgres plan: 5856.724
INFO:root:90
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999994 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2086.581
INFO:root:Postgres plan: 13411.155
INFO:root:91
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name_pcode_cf LIKE 'D%' AND n.gender='m'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999997 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.name_pcode_cf LIKE 'D%' AND n.gender='m'"]
INFO:root:Robust plan is 3: 1257.083
INFO:root:Postgres plan: 12523.719
INFO:root:92
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6356754036982418 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 262.397
INFO:root:Postgres plan: 12587.229
INFO:root:93
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.8742944568723793 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'votes', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 148.713
INFO:root:Postgres plan: 6039.126
INFO:root:94
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.865800624777899 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 7: 2366.954
INFO:root:Postgres plan: 13529.733
INFO:root:95
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.name LIKE 'Z%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.4696134280970257 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'rating', "n.name LIKE 'Z%'"]
INFO:root:Robust plan is 3: 1213.325
INFO:root:Postgres plan: 5940.034
INFO:root:96
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999998 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 151.375
INFO:root:Postgres plan: 13197.447
INFO:root:97
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.116986497044095 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'release dates', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 1: 934.418
INFO:root:Postgres plan: 12843.8
INFO:root:98
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.451044887873922 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 984.24
INFO:root:Postgres plan: 12515.522
INFO:root:99
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'top 250 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.982249434008226 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'top 250 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 735.715
INFO:root:Postgres plan: 229.635
