INFO:root:0
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.451298353805462 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'genres', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2233.9
INFO:root:Postgres plan: 7568.3
INFO:root:1
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.699137160072002 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 7: 2154.8
INFO:root:Postgres plan: 13661.3
INFO:root:2
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6877783129149758 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 152.5
INFO:root:Postgres plan: 13742.9
INFO:root:3
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note ='(voice: English version)'
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.12464756648059121 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["ci.note ='(voice: English version)'", 'countries', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 8: 250.9
INFO:root:Postgres plan: 6399.7
INFO:root:4
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.39504676545871176 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 152.0
INFO:root:Postgres plan: 13859.9
INFO:root:5
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'votes'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 198.46359539688132 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'votes', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 7: 2114.3
INFO:root:Postgres plan: 7008.3
INFO:root:6
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 128.18626168996718 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 7: 2214.5
INFO:root:Postgres plan: 13801.6
INFO:root:7
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name_pcode_cf LIKE 'D%' AND n.gender='m'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.242419081155562 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name_pcode_cf LIKE 'D%' AND n.gender='m'"]
INFO:root:Robust plan is 9: 343.6
INFO:root:Postgres plan: 13729.8
INFO:root:8
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note = '(voice)'
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%Angel%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.63034524941881 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note = '(voice)'", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%Angel%'"]
INFO:root:Robust plan is 9: 185.2
INFO:root:Postgres plan: 12767.1
INFO:root:9
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name_pcode_cf LIKE 'D%' AND n.gender='m'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.8212399333764668 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.name_pcode_cf LIKE 'D%' AND n.gender='m'"]
INFO:root:Robust plan is 9: 364.5
INFO:root:Postgres plan: 13774.0
INFO:root:10
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note ='(voice: English version)'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.8719486282006457 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note ='(voice: English version)'", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 1: 667.3
INFO:root:Postgres plan: 11936.6
INFO:root:11
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 5.153725611841623 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 7: 2181.1
INFO:root:Postgres plan: 13948.0
INFO:root:12
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(producer)', '(executive producer)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9295997724253197 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(producer)', '(executive producer)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 0: 1273.1
INFO:root:Postgres plan: 14772.2
INFO:root:13
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'bottom 10 rank'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 5.857583356641544 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'bottom 10 rank', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 7: 923.9
INFO:root:Postgres plan: 96.7
INFO:root:14
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.451681439859897 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2168.2
INFO:root:Postgres plan: 7159.1
INFO:root:15
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(producer)', '(executive producer)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.000000000000001 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(producer)', '(executive producer)')", 'genres', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 0: 1287.5
INFO:root:Postgres plan: 7972.1
INFO:root:16
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 5.8892553910313294 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'votes', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 7: 2193.7
INFO:root:Postgres plan: 6999.8
INFO:root:17
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999994 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2176.2
INFO:root:Postgres plan: 7023.1
INFO:root:18
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.337459487625569 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 7: 2123.7
INFO:root:Postgres plan: 6895.3
INFO:root:19
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5161786946689184 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 183.3
INFO:root:Postgres plan: 6979.1
INFO:root:20
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.795934150432763 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 9: 208.2
INFO:root:Postgres plan: 6928.8
INFO:root:21
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.4013492203681973 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 0: 1466.1
INFO:root:Postgres plan: 13978.4
INFO:root:22
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%Angel%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.8026722608519758 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'votes', "n.gender ='f' AND n.name LIKE '%Angel%'"]
INFO:root:Robust plan is 9: 182.6
INFO:root:Postgres plan: 7125.2
INFO:root:23
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'budget'
    AND it2.info = 'rating'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'B%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 48.10466428402662 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'budget', 'rating', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'B%'))"]
INFO:root:Robust plan is 7: 2078.8
INFO:root:Postgres plan: 3025.6
INFO:root:24
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.25704399877502 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'rating', "n.gender ='f'"]
INFO:root:Robust plan is 7: 2140.9
INFO:root:Postgres plan: 6998.5
INFO:root:25
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender IS NOT NULL AND n.gender = 'f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7463224451703283 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender IS NOT NULL AND n.gender = 'f'"]
INFO:root:Robust plan is 7: 2303.3
INFO:root:Postgres plan: 13997.2
INFO:root:26
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 21.854760694538236 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 7: 2126.4
INFO:root:Postgres plan: 13679.6
INFO:root:27
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.8072078645572711 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'release dates', 'votes', "n.gender ='f'"]
INFO:root:Robust plan is 7: 2367.0
INFO:root:Postgres plan: 14268.1
INFO:root:28
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.2438154260535546 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 0: 1080.6
INFO:root:Postgres plan: 7110.8
INFO:root:29
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'budget'
    AND it2.info = 'bottom 10 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 6.733542459402028 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'budget', 'bottom 10 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 0: 833.7
INFO:root:Postgres plan: 93.7
INFO:root:30
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 7.237345150863817 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'votes', "n.gender ='f'"]
INFO:root:Robust plan is 7: 2134.5
INFO:root:Postgres plan: 7243.4
INFO:root:31
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE '%Bert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999999 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.name LIKE '%Bert%'"]
INFO:root:Robust plan is 9: 172.3
INFO:root:Postgres plan: 7012.9
INFO:root:32
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 7.08166274118275 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 7: 2573.5
INFO:root:Postgres plan: 6894.6
INFO:root:33
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'B%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 926.2989697219376 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name LIKE 'B%'"]
INFO:root:Robust plan is 7: 2106.3
INFO:root:Postgres plan: 7104.1
INFO:root:34
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'budget'
    AND it2.info = 'top 250 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.10223738409299402 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'budget', 'top 250 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 0: 864.5
INFO:root:Postgres plan: 217.8
INFO:root:35
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.009680903700379 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 291.1
INFO:root:Postgres plan: 13727.9
INFO:root:36
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.8514806189493778 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2252.9
INFO:root:Postgres plan: 14328.4
INFO:root:37
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.4637195841036746 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2181.4
INFO:root:Postgres plan: 7152.5
INFO:root:38
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.3442126302426514 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 153.7
INFO:root:Postgres plan: 13753.2
INFO:root:39
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender IS NOT NULL AND n.gender = 'f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 68.55196014040276 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.gender IS NOT NULL AND n.gender = 'f'"]
INFO:root:Robust plan is 7: 2209.3
INFO:root:Postgres plan: 14084.1
INFO:root:40
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'bottom 10 rank'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.173522208257551 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'bottom 10 rank', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 154.0
INFO:root:Postgres plan: 95.2
INFO:root:41
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 11.287107433088028 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 7: 2588.9
INFO:root:Postgres plan: 13750.9
INFO:root:42
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.7929095844234495 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 182.5
INFO:root:Postgres plan: 14029.9
INFO:root:43
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.268867654342223 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 183.8
INFO:root:Postgres plan: 13836.7
INFO:root:44
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.name LIKE 'X%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999998 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'votes', "n.name LIKE 'X%'"]
INFO:root:Robust plan is 9: 138.2
INFO:root:Postgres plan: 7000.2
INFO:root:45
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Angel%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.3695798062988302 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.gender ='f' AND n.name LIKE '%Angel%'"]
INFO:root:Robust plan is 9: 185.9
INFO:root:Postgres plan: 7145.3
INFO:root:46
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note = '(voice)'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE 'Z%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 11.626746745540133 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note = '(voice)'", 'release dates', 'rating', "n.name LIKE 'Z%'"]
INFO:root:Robust plan is 9: 183.5
INFO:root:Postgres plan: 12732.2
INFO:root:47
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE '%Bert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.name LIKE '%Bert%'"]
INFO:root:Robust plan is 9: 171.4
INFO:root:Postgres plan: 6979.5
INFO:root:48
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.3320611734668755 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 151.8
INFO:root:Postgres plan: 7122.4
INFO:root:49
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'top 250 rank'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 56.121799192712935 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'top 250 rank', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 7: 1536.8
INFO:root:Postgres plan: 226.9
INFO:root:50
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note ='(voice: English version)'
    AND it1.info = 'release dates'
    AND it2.info = 'bottom 10 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ["ci.note ='(voice: English version)'", 'release dates', 'bottom 10 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 1: 638.1
INFO:root:Postgres plan: 96.1
INFO:root:51
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'B%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.16369101950417922 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'genres', 'rating', "n.name LIKE 'B%'"]
INFO:root:Robust plan is 7: 2181.5
INFO:root:Postgres plan: 7285.4
INFO:root:52
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(voice)%' AND ci.note LIKE '%(uncredited)%'
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000007 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ["ci.note LIKE '%(voice)%' AND ci.note LIKE '%(uncredited)%'", 'genres', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 6: 861.0
INFO:root:Postgres plan: 6596.2
INFO:root:53
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'budget'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9201554640091503 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'budget', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2117.8
INFO:root:Postgres plan: 3062.7
INFO:root:54
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'top 250 rank'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 7.535446871981982 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'top 250 rank', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 182.8
INFO:root:Postgres plan: 644.2
INFO:root:55
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'top 250 rank'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.3484534668794919 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'top 250 rank', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 149.3
INFO:root:Postgres plan: 228.6
INFO:root:56
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'votes'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.1457867562384394 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'votes', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 0: 1100.2
INFO:root:Postgres plan: 6983.3
INFO:root:57
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 154.0
INFO:root:Postgres plan: 13946.5
INFO:root:58
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 9.674340334048315 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 187.6
INFO:root:Postgres plan: 13863.2
INFO:root:59
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0519501097560857 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2203.2
INFO:root:Postgres plan: 14197.0
INFO:root:60
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.0474513765595814 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%'"]
INFO:root:Robust plan is 7: 2303.3
INFO:root:Postgres plan: 13732.1
INFO:root:61
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'Z%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 5.241162822914317 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name LIKE 'Z%'"]
INFO:root:Robust plan is 7: 2051.7
INFO:root:Postgres plan: 7102.2
INFO:root:62
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender IS NOT NULL AND n.gender = 'f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.304588437794895 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender IS NOT NULL AND n.gender = 'f'"]
INFO:root:Robust plan is 7: 2261.6
INFO:root:Postgres plan: 13632.1
INFO:root:63
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.476267641614466 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 9: 217.1
INFO:root:Postgres plan: 13222.4
INFO:root:64
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.name LIKE 'X%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.999999999999999 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'rating', "n.name LIKE 'X%'"]
INFO:root:Robust plan is 9: 153.8
INFO:root:Postgres plan: 6234.9
INFO:root:65
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note ='(voice: English version)'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ["ci.note ='(voice: English version)'", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 8: 168.5
INFO:root:Postgres plan: 11885.7
INFO:root:66
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'genres'
    AND it2.info = 'bottom 10 rank'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6418703457335263 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'genres', 'bottom 10 rank', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 164.3
INFO:root:Postgres plan: 95.8
INFO:root:67
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Angel%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.416296195707619 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%Angel%'"]
INFO:root:Robust plan is 9: 192.2
INFO:root:Postgres plan: 13670.8
INFO:root:68
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9082309452200431 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'votes', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 274.0
INFO:root:Postgres plan: 6563.9
INFO:root:69
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2213.4
INFO:root:Postgres plan: 14608.3
INFO:root:70
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note = '(voice)'
    AND it1.info = 'genres'
    AND it2.info = 'top 250 rank'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.5919071245461072 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note = '(voice)'", 'genres', 'top 250 rank', "n.gender ='f'"]
INFO:root:Robust plan is 7: 1237.3
INFO:root:Postgres plan: 224.9
INFO:root:71
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.2217337987279984 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.gender ='f'"]
INFO:root:Robust plan is 7: 2217.7
INFO:root:Postgres plan: 12997.3
INFO:root:72
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.0547864562715956 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 0: 1045.3
INFO:root:Postgres plan: 13394.7
INFO:root:73
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5072019183519643 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 9: 215.7
INFO:root:Postgres plan: 12768.6
INFO:root:74
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.18640904374037207 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 7: 2169.1
INFO:root:Postgres plan: 13646.7
INFO:root:75
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6112920399163453 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2189.1
INFO:root:Postgres plan: 7108.4
INFO:root:76
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.08878755930136586 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 292.6
INFO:root:Postgres plan: 13748.4
INFO:root:77
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.4492168226848385 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'genres', 'rating', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2234.0
INFO:root:Postgres plan: 7601.1
INFO:root:78
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'votes'
    AND n.gender ='f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7720914791371304 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'votes', "n.gender ='f'"]
INFO:root:Robust plan is 7: 2249.1
INFO:root:Postgres plan: 7002.2
INFO:root:79
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'X%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'genres', 'rating', "n.name LIKE 'X%'"]
INFO:root:Robust plan is 9: 138.7
INFO:root:Postgres plan: 6986.4
INFO:root:80
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note = '(voice)'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender IS NOT NULL AND n.gender = 'f'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 170.5799135029075 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note = '(voice)'", 'release dates', 'rating', "n.gender IS NOT NULL AND n.gender = 'f'"]
INFO:root:Robust plan is 7: 1880.1
INFO:root:Postgres plan: 12977.0
INFO:root:81
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'bottom 10 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.5388144940875117 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'bottom 10 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 255.7
INFO:root:Postgres plan: 95.3
INFO:root:82
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.000000000000001 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 151.6
INFO:root:Postgres plan: 13714.3
INFO:root:83
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.1841831484499608 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 149.9
INFO:root:Postgres plan: 13772.6
INFO:root:84
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%Ang%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.373782261718722 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%Ang%'"]
INFO:root:Robust plan is 9: 183.5
INFO:root:Postgres plan: 14028.0
INFO:root:85
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name LIKE '%Bert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.3998999291628418 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.name LIKE '%Bert%'"]
INFO:root:Robust plan is 9: 170.6
INFO:root:Postgres plan: 13766.4
INFO:root:86
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.035664318380628605 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'rating', "n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%'))"]
INFO:root:Robust plan is 0: 1419.9
INFO:root:Postgres plan: 7209.1
INFO:root:87
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'rating'
    AND n.name LIKE 'B%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1450.291604324682 samples to be accurate, We have 50
INFO:root:88
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.name LIKE '%B%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6502892305279402 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'rating', "n.name LIKE '%B%'"]
INFO:root:Robust plan is 7: 2200.7
INFO:root:Postgres plan: 7088.1
INFO:root:89
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'countries'
    AND it2.info = 'votes'
    AND n.name_pcode_cf LIKE 'D%' AND n.gender='m'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.552280874569072 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'countries', 'votes', "n.name_pcode_cf LIKE 'D%' AND n.gender='m'"]
INFO:root:Robust plan is 7: 2078.7
INFO:root:Postgres plan: 6892.9
INFO:root:90
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.gender = 'm'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9999999999999997 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'votes', "n.gender = 'm'"]
INFO:root:Robust plan is 7: 2248.1
INFO:root:Postgres plan: 14461.6
INFO:root:91
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.name_pcode_cf LIKE 'D%' AND n.gender='m'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.5556974082633452 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.name_pcode_cf LIKE 'D%' AND n.gender='m'"]
INFO:root:Robust plan is 7: 3001.7
INFO:root:Postgres plan: 13756.0
INFO:root:92
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.2440833545742005 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 268.0
INFO:root:Postgres plan: 13769.0
INFO:root:93
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'votes'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.8829721480304844 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'votes', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 152.5
INFO:root:Postgres plan: 7113.5
INFO:root:94
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.6776548780069114 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 9: 293.3
INFO:root:Postgres plan: 13792.8
INFO:root:95
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'countries'
    AND it2.info = 'rating'
    AND n.name LIKE 'Z%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 9.039229467900523 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'countries', 'rating', "n.name LIKE 'Z%'"]
INFO:root:Robust plan is 7: 2230.4
INFO:root:Postgres plan: 6923.2
INFO:root:96
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'votes'
    AND n.name LIKE '%Downey%Robert%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'votes', "n.name LIKE '%Downey%Robert%'"]
INFO:root:Robust plan is 9: 150.6
INFO:root:Postgres plan: 13815.4
INFO:root:97
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note LIKE '%(producer)%'
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender = 'm' AND n.name LIKE '%Tim%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.7182431417433923 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note LIKE '%(producer)%'", 'release dates', 'rating', "n.gender = 'm' AND n.name LIKE '%Tim%'"]
INFO:root:Robust plan is 0: 1045.9
INFO:root:Postgres plan: 13966.8
INFO:root:98
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
    AND it1.info = 'release dates'
    AND it2.info = 'rating'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.131006523216162 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')", 'release dates', 'rating', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 0: 1108.8
INFO:root:Postgres plan: 13687.0
INFO:root:99
INFO:root:
    SELECT MIN(mi.info) AS movie_budget,
       MIN(mi_idx.info) AS movie_votes,
       MIN(t.title) AS movie_title
    FROM cast_info AS ci,
        info_type AS it1,
        info_type AS it2,
        movie_info AS mi,
        movie_info_idx AS mi_idx,
        name AS n,
        title AS t
    WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
    AND it1.info = 'genres'
    AND it2.info = 'top 250 rank'
    AND n.gender ='f' AND n.name LIKE '%An%'
    AND t.id = mi.movie_id
    AND t.id = mi_idx.movie_id
    AND t.id = ci.movie_id
    AND ci.movie_id = mi.movie_id
    AND ci.movie_id = mi_idx.movie_id
    AND mi.movie_id = mi_idx.movie_id
    AND n.id = ci.person_id
    AND it1.id = mi.info_type_id
    AND it2.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.580787954696591 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ["ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')", 'genres', 'top 250 rank', "n.gender ='f' AND n.name LIKE '%An%'"]
INFO:root:Robust plan is 0: 838.7
INFO:root:Postgres plan: 241.3
