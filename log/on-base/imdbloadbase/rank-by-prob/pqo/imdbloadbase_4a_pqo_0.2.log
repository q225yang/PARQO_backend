INFO:root:0
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword ='sequel'
    AND mi_idx.info < '8.5'
    AND t.episode_nr >= 50 AND t.episode_nr < 100
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 14.367226935934424 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['bottom 10 rank', "k.keyword ='sequel'", "mi_idx.info < '8.5'", 't.episode_nr >= 50 AND t.episode_nr < 100']
INFO:root:Robust plan is 1: 57.055
INFO:root:Postgres plan: 54.008
INFO:root:1
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info > '8.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000004 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info > '8.0'", 't.production_year > 2000']
INFO:root:Robust plan is 5: 200.679
INFO:root:Postgres plan: 152.672
INFO:root:2
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND  mi_idx.info < '7.0'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 8.645893371875719 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", " mi_idx.info < '7.0'", 't.production_year > 2005']
INFO:root:Robust plan is 1: 188.445
INFO:root:Postgres plan: 182.232
INFO:root:3
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info > '7.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", "mi_idx.info > '7.0'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 147.534
INFO:root:Postgres plan: 136.813
INFO:root:4
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND mi_idx.info > '6.5'
    AND t.production_year >2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 14.058332289718892 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", "mi_idx.info > '6.5'", 't.production_year >2010']
INFO:root:Robust plan is 6: 172.482
INFO:root:Postgres plan: 136.372
INFO:root:5
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 1980 AND 1995
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.19685357354004832 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", "mi_idx.info < '8.5'", 't.production_year BETWEEN 1980 AND 1995']
INFO:root:Robust plan is 6: 231.81
INFO:root:Postgres plan: 125.924
INFO:root:6
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('sequel', 'revenge', 'based-on-novel')
    AND mi_idx.info > '9.0'
    AND t.production_year BETWEEN 1980 AND 1984
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 6.298214500742749 samples to be accurate, We have 50
INFO:root:Nearest query is 9
INFO:root:Current Query: ['rating', "k.keyword IN ('sequel', 'revenge', 'based-on-novel')", "mi_idx.info > '9.0'", 't.production_year BETWEEN 1980 AND 1984']
INFO:root:Robust plan is 2: 70.616
INFO:root:Postgres plan: 159.625
INFO:root:7
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 196.87
INFO:root:Postgres plan: 189.437
INFO:root:8
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='sequel'
    AND mi_idx.info > '8.0'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.304217480294804 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ['rating', "k.keyword ='sequel'", "mi_idx.info > '8.0'", 't.production_year > 1990']
INFO:root:Robust plan is 4: 87.153
INFO:root:Postgres plan: 52.544
INFO:root:9
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='sequel'
    AND mi_idx.info < '3.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5400826667197012 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='sequel'", "mi_idx.info < '3.0'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 70.906
INFO:root:Postgres plan: 56.91
INFO:root:10
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='sequel'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.4344361987057945 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='sequel'", "mi_idx.info < '8.5'", 't.production_year > 2005']
INFO:root:Robust plan is 1: 74.233
INFO:root:Postgres plan: 73.638
INFO:root:11
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info > '8.0'
    AND t.production_year BETWEEN 2007 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.5433749718498082 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info > '8.0'", 't.production_year BETWEEN 2007 AND 2010']
INFO:root:Robust plan is 5: 154.382
INFO:root:Postgres plan: 152.283
INFO:root:12
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND mi_idx.info > '7.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.14935397611651333 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", "mi_idx.info > '7.0'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 214.032
INFO:root:Postgres plan: 304.592
INFO:root:13
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword = 'marvel-cinematic-universe'
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 2007 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5438484896036023 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['bottom 10 rank', "k.keyword = 'marvel-cinematic-universe'", "mi_idx.info < '8.5'", 't.production_year BETWEEN 2007 AND 2010']
INFO:root:Robust plan is 1: 10.482
INFO:root:Postgres plan: 20.476
INFO:root:14
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('murder', 'murder-in-title')
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 1950 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.16831111048736944 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword IN ('murder', 'murder-in-title')", "mi_idx.info < '8.5'", 't.production_year BETWEEN 1950 AND 2010']
INFO:root:Robust plan is 1: 140.126
INFO:root:Postgres plan: 137.892
INFO:root:15
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND mi_idx.info < '3.5'
    AND t.production_year BETWEEN 2000 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.7611134112180893 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['bottom 10 rank', "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", "mi_idx.info < '3.5'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 7: 214.891
INFO:root:Postgres plan: 280.682
INFO:root:16
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 2005 AND 2015
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9651855334429239 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')", "mi_idx.info < '8.5'", 't.production_year BETWEEN 2005 AND 2015']
INFO:root:Robust plan is 6: 159.921
INFO:root:Postgres plan: 36.612
INFO:root:17
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND mi_idx.info > '6.0'
    AND t.title = 'Shrek 2'
  AND t.production_year BETWEEN 2000 AND 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000002 samples to be accurate, We have 50
INFO:root:Nearest query is 11
INFO:root:Current Query: ['votes', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", "mi_idx.info > '6.0'", "t.title = 'Shrek 2'\n  AND t.production_year BETWEEN 2000 AND 2005"]
INFO:root:Robust plan is 3: 167.739
INFO:root:Postgres plan: 104.58
INFO:root:18
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND mi_idx.info > '6.5'
    AND t.production_year BETWEEN 1980 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.3924982844518248 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", "mi_idx.info > '6.5'", 't.production_year BETWEEN 1980 AND 2010']
INFO:root:Robust plan is 6: 228.595
INFO:root:Postgres plan: 321.715
INFO:root:19
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='sequel'
    AND mi_idx.info < '3.0'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.3678195576712078 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='sequel'", "mi_idx.info < '3.0'", 't.production_year > 1990']
INFO:root:Robust plan is 1: 65.12
INFO:root:Postgres plan: 63.938
INFO:root:20
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info > '2.0'
    AND t.production_year BETWEEN 2000 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.9663432952304583 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", "mi_idx.info > '2.0'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 1: 175.419
INFO:root:Postgres plan: 170.381
INFO:root:21
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 1980 AND 1984
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 14.960426097145607 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info < '8.5'", 't.production_year BETWEEN 1980 AND 1984']
INFO:root:Robust plan is 7: 267.121
INFO:root:Postgres plan: 155.146
INFO:root:22
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')
    AND mi_idx.info > '8.0'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.8442935763232253 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ['votes', "k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat')", "mi_idx.info > '8.0'", 't.production_year > 1990']
INFO:root:Robust plan is 5: 329.312
INFO:root:Postgres plan: 62.807
INFO:root:23
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'top 250 rank'
    AND k.keyword = 'marvel-cinematic-universe'
    AND mi_idx.info > '9.0'
    AND t.production_year >2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 8
INFO:root:Current Query: ['top 250 rank', "k.keyword = 'marvel-cinematic-universe'", "mi_idx.info > '9.0'", 't.production_year >2010']
INFO:root:Robust plan is 2: 69.059
INFO:root:Postgres plan: 23.548
INFO:root:24
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND  mi_idx.info < '7.0'
    AND t.production_year BETWEEN 1950 AND 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.2530873105628626 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", " mi_idx.info < '7.0'", 't.production_year BETWEEN 1950 AND 2000']
INFO:root:Robust plan is 1: 186.252
INFO:root:Postgres plan: 176.661
INFO:root:25
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND  mi_idx.info < '7.0'
    AND t.production_year BETWEEN 2005 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5475133838929153 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", " mi_idx.info < '7.0'", 't.production_year BETWEEN 2005 AND 2010']
INFO:root:Robust plan is 6: 226.765
INFO:root:Postgres plan: 161.191
INFO:root:26
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info > '6.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.039502354154569 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword LIKE '%sequel%'", "mi_idx.info > '6.0'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 139.273
INFO:root:Postgres plan: 71.053
INFO:root:27
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.production_year = 1998 AND t.title LIKE '%Money%'
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.4446051925739966 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ['bottom 10 rank', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", "t.production_year = 1998 AND t.title LIKE '%Money%'"]
INFO:root:Robust plan is 1: 131.577
INFO:root:Postgres plan: 129.813
INFO:root:28
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '3.5'
    AND t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.43435866740721774 samples to be accurate, We have 50
INFO:root:Nearest query is 6
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", "mi_idx.info < '3.5'", "t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')"]
INFO:root:Robust plan is 0: 131.331
INFO:root:Postgres plan: 128.489
INFO:root:29
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='10,000-mile-club'
    AND mi_idx.info > '7.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['votes', "k.keyword ='10,000-mile-club'", "mi_idx.info > '7.0'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 91.468
INFO:root:Postgres plan: 14.915
INFO:root:30
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year > 1950
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.35501860760515 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['bottom 10 rank', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info < '8.5'", 't.production_year > 1950']
INFO:root:Robust plan is 7: 190.384
INFO:root:Postgres plan: 162.235
INFO:root:31
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND  mi_idx.info < '7.0'
    AND t.production_year BETWEEN 2000 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.591230224102457 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", " mi_idx.info < '7.0'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 7: 324.798
INFO:root:Postgres plan: 437.638
INFO:root:32
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info > '7.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", "mi_idx.info > '7.0'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 140.917
INFO:root:Postgres plan: 133.303
INFO:root:33
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword = 'marvel-cinematic-universe'
    AND mi_idx.info < '3.0'
    AND t.production_year >2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.167429689283278 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['bottom 10 rank', "k.keyword = 'marvel-cinematic-universe'", "mi_idx.info < '3.0'", 't.production_year >2010']
INFO:root:Robust plan is 6: 101.409
INFO:root:Postgres plan: 23.636
INFO:root:34
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND mi_idx.info > '2.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.37058129334477585 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", "mi_idx.info > '2.0'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 227.131
INFO:root:Postgres plan: 170.162
INFO:root:35
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='sequel'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9252163626521248 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='sequel'", "mi_idx.info < '8.5'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 77.013
INFO:root:Postgres plan: 74.059
INFO:root:36
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND  mi_idx.info < '7.0'
    AND t.production_year BETWEEN 1950 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.3180924256790234 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", " mi_idx.info < '7.0'", 't.production_year BETWEEN 1950 AND 2010']
INFO:root:Robust plan is 7: 248.524
INFO:root:Postgres plan: 232.885
INFO:root:37
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='sequel'
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 2008 AND 2014
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.461231946983953 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='sequel'", "mi_idx.info < '8.5'", 't.production_year BETWEEN 2008 AND 2014']
INFO:root:Robust plan is 1: 76.708
INFO:root:Postgres plan: 74.65
INFO:root:38
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info > '7.0'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 5.411908271060283 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['rating', "k.keyword LIKE '%sequel%'", "mi_idx.info > '7.0'", 't.production_year > 2005']
INFO:root:Robust plan is 6: 130.34
INFO:root:Postgres plan: 68.824
INFO:root:39
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 2005 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.2828687819255074 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info < '8.5'", 't.production_year BETWEEN 2005 AND 2010']
INFO:root:Robust plan is 7: 271.046
INFO:root:Postgres plan: 258.556
INFO:root:40
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.026244608365701 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info < '8.5'", 't.production_year > 2005']
INFO:root:Robust plan is 7: 266.533
INFO:root:Postgres plan: 247.375
INFO:root:41
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='sequel'
    AND mi_idx.info > '5.0'
    AND t.production_year > 2014
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 46.2655664654814 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ['rating', "k.keyword ='sequel'", "mi_idx.info > '5.0'", 't.production_year > 2014']
INFO:root:Robust plan is 1: 53.789
INFO:root:Postgres plan: 54.639
INFO:root:42
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND mi_idx.info > '9.0'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0000000000000002 samples to be accurate, We have 50
INFO:root:Nearest query is 9
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", "mi_idx.info > '9.0'", 't.production_year > 1990']
INFO:root:Robust plan is 2: 77.114
INFO:root:Postgres plan: 145.874
INFO:root:43
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='sequel'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.4640374880918663 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='sequel'", "mi_idx.info < '8.5'", 't.production_year > 2005']
INFO:root:Robust plan is 1: 75.248
INFO:root:Postgres plan: 71.611
INFO:root:44
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'murder-in-title')
    AND mi_idx.info > '6.0'
    AND t.production_year BETWEEN 2005 AND 2008
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 24.810996946414825 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'murder-in-title')", "mi_idx.info > '6.0'", 't.production_year BETWEEN 2005 AND 2008']
INFO:root:Robust plan is 6: 163.158
INFO:root:Postgres plan: 116.485
INFO:root:45
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword = 'computer-animation'
    AND mi_idx.info < '8.5'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.4641725840317683 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword = 'computer-animation'", "mi_idx.info < '8.5'", 't.production_year > 1990']
INFO:root:Robust plan is 1: 27.198
INFO:root:Postgres plan: 25.377
INFO:root:46
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND mi_idx.info < '8.5'
    AND t.production_year > 1950
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.265428669997304 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", "mi_idx.info < '8.5'", 't.production_year > 1950']
INFO:root:Robust plan is 7: 352.772
INFO:root:Postgres plan: 475.768
INFO:root:47
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info < '3.5'
    AND t.production_year BETWEEN 2000 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9721838209816644 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['bottom 10 rank', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info < '3.5'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 7: 174.926
INFO:root:Postgres plan: 155.498
INFO:root:48
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND mi_idx.info > '7.0'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 9.15370040722683 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", "mi_idx.info > '7.0'", 't.production_year > 2005']
INFO:root:Robust plan is 6: 153.449
INFO:root:Postgres plan: 122.563
INFO:root:49
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 1980 AND 1995
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.3291820891878402 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", 't.production_year BETWEEN 1980 AND 1995']
INFO:root:Robust plan is 1: 201.124
INFO:root:Postgres plan: 158.238
INFO:root:50
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.999999999999999 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 196.351
INFO:root:Postgres plan: 193.407
INFO:root:51
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.production_year >2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 9.155062287835449 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", 't.production_year >2010']
INFO:root:Robust plan is 1: 198.684
INFO:root:Postgres plan: 133.536
INFO:root:52
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')
    AND mi_idx.info > '6.0'
    AND t.production_year BETWEEN 1950 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 103.35065667511498 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity')", "mi_idx.info > '6.0'", 't.production_year BETWEEN 1950 AND 2010']
INFO:root:Robust plan is 7: 236.63
INFO:root:Postgres plan: 303.273
INFO:root:53
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword = 'marvel-cinematic-universe'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2010
  AND t.title LIKE 'Vampire%'
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 28.645043953443885 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ['votes', "k.keyword = 'marvel-cinematic-universe'", "mi_idx.info < '8.5'", "t.production_year > 2010\n  AND t.title LIKE 'Vampire%'"]
INFO:root:Robust plan is 1: 23.906
INFO:root:Postgres plan: 20.537
INFO:root:54
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='sequel'
    AND  mi_idx.info < '7.0'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.0634383811985306 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='sequel'", " mi_idx.info < '7.0'", 't.production_year > 1990']
INFO:root:Robust plan is 1: 74.964
INFO:root:Postgres plan: 73.255
INFO:root:55
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='sequel'
    AND mi_idx.info > '6.5'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.1532259875018682 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['rating', "k.keyword ='sequel'", "mi_idx.info > '6.5'", 't.production_year > 2005']
INFO:root:Robust plan is 6: 129.08
INFO:root:Postgres plan: 59.094
INFO:root:56
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.title != '' AND (t.title LIKE 'Champion%' OR t.title LIKE 'Loser%')
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 42.69743035588057 samples to be accurate, We have 50
INFO:root:Nearest query is 6
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", "t.title != '' AND (t.title LIKE 'Champion%' OR t.title LIKE 'Loser%')"]
INFO:root:Robust plan is 0: 128.594
INFO:root:Postgres plan: 130.862
INFO:root:57
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND mi_idx.info > '8.0'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0464792282535684 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", "mi_idx.info > '8.0'", 't.production_year > 2005']
INFO:root:Robust plan is 5: 175.817
INFO:root:Postgres plan: 107.145
INFO:root:58
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info < '8.5'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.23176199648533685 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword LIKE '%sequel%'", "mi_idx.info < '8.5'", 't.production_year > 1990']
INFO:root:Robust plan is 6: 194.987
INFO:root:Postgres plan: 94.205
INFO:root:59
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND mi_idx.info < '8.5'
    AND t.episode_nr >= 50 AND t.episode_nr < 100
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 37.21420951065207 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", "mi_idx.info < '8.5'", 't.episode_nr >= 50 AND t.episode_nr < 100']
INFO:root:Robust plan is 6: 262.923
INFO:root:Postgres plan: 146.798
INFO:root:60
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info < '3.0'
    AND t.production_year BETWEEN 2007 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.48102533971247174 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword LIKE '%sequel%'", "mi_idx.info < '3.0'", 't.production_year BETWEEN 2007 AND 2010']
INFO:root:Robust plan is 6: 157.249
INFO:root:Postgres plan: 79.658
INFO:root:61
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND mi_idx.info < '8.5'
    AND t.production_year > 1950
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.282284564580802 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['votes', "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", "mi_idx.info < '8.5'", 't.production_year > 1950']
INFO:root:Robust plan is 7: 336.558
INFO:root:Postgres plan: 461.082
INFO:root:62
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info > '6.5'
    AND t.production_year BETWEEN 2005 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 6.223605757373451 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword LIKE '%sequel%'", "mi_idx.info > '6.5'", 't.production_year BETWEEN 2005 AND 2010']
INFO:root:Robust plan is 6: 139.674
INFO:root:Postgres plan: 71.532
INFO:root:63
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 4.425452711202427 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", "mi_idx.info < '8.5'", "t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')"]
INFO:root:Robust plan is 6: 266.05
INFO:root:Postgres plan: 147.077
INFO:root:64
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND mi_idx.info > '8.0'
    AND t.production_year BETWEEN 2005 AND 2008
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 7.50290446798828 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", "mi_idx.info > '8.0'", 't.production_year BETWEEN 2005 AND 2008']
INFO:root:Robust plan is 5: 142.944
INFO:root:Postgres plan: 149.426
INFO:root:65
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.21682376873078954 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['votes', "k.keyword LIKE '%sequel%'", "mi_idx.info < '8.5'", 't.production_year > 2005']
INFO:root:Robust plan is 7: 196.856
INFO:root:Postgres plan: 91.176
INFO:root:66
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND mi_idx.info < '8.5'
    AND t.production_year >2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.7945304158137798 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", "mi_idx.info < '8.5'", 't.production_year >2010']
INFO:root:Robust plan is 6: 231.95
INFO:root:Postgres plan: 164.633
INFO:root:67
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='sequel'
    AND mi_idx.info > '7.0'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.1223633289447974 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['rating', "k.keyword ='sequel'", "mi_idx.info > '7.0'", 't.production_year > 1990']
INFO:root:Robust plan is 6: 120.308
INFO:root:Postgres plan: 55.402
INFO:root:68
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND mi_idx.info > '5.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9714939980099343 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['bottom 10 rank', "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", "mi_idx.info > '5.0'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 197.421
INFO:root:Postgres plan: 286.62
INFO:root:69
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND  mi_idx.info < '7.0'
    AND t.production_year > 2000
  AND (t.title LIKE '%Freddy%'
       OR t.title LIKE '%Jason%'
       OR t.title LIKE 'Saw%')
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.18301483993799242 samples to be accurate, We have 50
INFO:root:Nearest query is 10
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", " mi_idx.info < '7.0'", "t.production_year > 2000\n  AND (t.title LIKE '%Freddy%'\n       OR t.title LIKE '%Jason%'\n       OR t.title LIKE 'Saw%')"]
INFO:root:Robust plan is 2: 246.287
INFO:root:Postgres plan: 147.445
INFO:root:70
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info < '3.5'
    AND t.production_year BETWEEN 1950 AND 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.9441718592836729 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword LIKE '%sequel%'", "mi_idx.info < '3.5'", 't.production_year BETWEEN 1950 AND 2000']
INFO:root:Robust plan is 6: 160.315
INFO:root:Postgres plan: 81.079
INFO:root:71
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info < '3.0'
    AND t.production_year BETWEEN 1950 AND 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.884849558186693 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['rating', "k.keyword LIKE '%sequel%'", "mi_idx.info < '3.0'", 't.production_year BETWEEN 1950 AND 2000']
INFO:root:Robust plan is 6: 133.441
INFO:root:Postgres plan: 69.504
INFO:root:72
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.27381239867295337 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", "mi_idx.info < '8.5'", 't.production_year > 2000']
INFO:root:Robust plan is 7: 268.557
INFO:root:Postgres plan: 245.827
INFO:root:73
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0 samples to be accurate, We have 50
INFO:root:Nearest query is 6
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", "t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%')"]
INFO:root:Robust plan is 0: 117.816
INFO:root:Postgres plan: 130.126
INFO:root:74
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 1980 AND 1984
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.3757581326048858 samples to be accurate, We have 50
INFO:root:Nearest query is 6
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", 't.production_year BETWEEN 1980 AND 1984']
INFO:root:Robust plan is 0: 138.639
INFO:root:Postgres plan: 142.709
INFO:root:75
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info < '3.0'
    AND t.episode_nr >= 5 AND t.episode_nr < 100
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.5790991394692826 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['rating', "k.keyword LIKE '%sequel%'", "mi_idx.info < '3.0'", 't.episode_nr >= 5 AND t.episode_nr < 100']
INFO:root:Robust plan is 6: 135.967
INFO:root:Postgres plan: 70.563
INFO:root:76
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info > '7.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.7518021473044125 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['rating', "k.keyword LIKE '%sequel%'", "mi_idx.info > '7.0'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 134.002
INFO:root:Postgres plan: 68.369
INFO:root:77
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND  mi_idx.info < '7.0'
    AND t.production_year BETWEEN 1950 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.2455377016555682 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", " mi_idx.info < '7.0'", 't.production_year BETWEEN 1950 AND 2010']
INFO:root:Robust plan is 1: 192.515
INFO:root:Postgres plan: 180.142
INFO:root:78
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 1950 AND 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 2.364748123950856 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", "mi_idx.info < '8.5'", 't.production_year BETWEEN 1950 AND 2000']
INFO:root:Robust plan is 1: 203.222
INFO:root:Postgres plan: 198.036
INFO:root:79
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'top 250 rank'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year > 1950
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.346475205168634 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['top 250 rank', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info < '8.5'", 't.production_year > 1950']
INFO:root:Robust plan is 7: 203.82
INFO:root:Postgres plan: 167.067
INFO:root:80
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info > '7.0'
    AND t.production_year BETWEEN 2005 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 130.65033624858404 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['rating', "k.keyword LIKE '%sequel%'", "mi_idx.info > '7.0'", 't.production_year BETWEEN 2005 AND 2010']
INFO:root:Robust plan is 6: 128.082
INFO:root:Postgres plan: 75.262
INFO:root:81
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5494840958641697 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", "mi_idx.info < '8.5'", 't.production_year > 2000']
INFO:root:Robust plan is 6: 265.884
INFO:root:Postgres plan: 231.065
INFO:root:82
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info < '3.0'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.747199171071501 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", "mi_idx.info < '3.0'", 't.production_year > 2005']
INFO:root:Robust plan is 1: 166.459
INFO:root:Postgres plan: 161.054
INFO:root:83
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 12.563353472199706 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword LIKE '%sequel%'", "mi_idx.info < '8.5'", 't.production_year > 2005']
INFO:root:Robust plan is 7: 200.867
INFO:root:Postgres plan: 93.063
INFO:root:84
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'murder-in-title')
    AND mi_idx.info > '2.0'
    AND t.production_year > 1990
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1090.3120992602433 samples to be accurate, We have 50
INFO:root:85
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info > '2.0'
    AND t.production_year BETWEEN 2000 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5472232277664993 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", "mi_idx.info > '2.0'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 1: 194.301
INFO:root:Postgres plan: 194.85
INFO:root:86
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 1980 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.8724880976357008 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info < '8.5'", 't.production_year BETWEEN 1980 AND 2010']
INFO:root:Robust plan is 1: 252.484
INFO:root:Postgres plan: 251.989
INFO:root:87
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info > '8.0'
    AND t.production_year >2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.2565380717531503 samples to be accurate, We have 50
INFO:root:Nearest query is 8
INFO:root:Current Query: ['rating', "k.keyword ='character-name-in-title'", "mi_idx.info > '8.0'", 't.production_year >2010']
INFO:root:Robust plan is 2: 127.839
INFO:root:Postgres plan: 119.901
INFO:root:88
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'top 250 rank'
    AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
    AND mi_idx.info > '7.0'
    AND t.production_year BETWEEN 2000 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 11.2069618789638 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['top 250 rank', "k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')", "mi_idx.info > '7.0'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 6: 164.497
INFO:root:Postgres plan: 145.413
INFO:root:89
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info < '3.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.2495304967573212 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['votes', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info < '3.0'", 't.production_year > 2000']
INFO:root:Robust plan is 7: 220.975
INFO:root:Postgres plan: 202.797
INFO:root:90
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword ='sequel'
    AND mi_idx.info < '8.5'
    AND t.production_year BETWEEN 2007 AND 2008
  AND t.title LIKE '%Kung%Fu%Panda%'
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.791645851912806 samples to be accurate, We have 50
INFO:root:Nearest query is 5
INFO:root:Current Query: ['rating', "k.keyword ='sequel'", "mi_idx.info < '8.5'", "t.production_year BETWEEN 2007 AND 2008\n  AND t.title LIKE '%Kung%Fu%Panda%'"]
INFO:root:Robust plan is 1: 52.051
INFO:root:Postgres plan: 55.1
INFO:root:91
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'bottom 10 rank'
    AND k.keyword LIKE '%sequel%'
    AND mi_idx.info < '8.5'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.26651470700106167 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['bottom 10 rank', "k.keyword LIKE '%sequel%'", "mi_idx.info < '8.5'", 't.production_year > 2000']
INFO:root:Robust plan is 7: 148.71
INFO:root:Postgres plan: 70.445
INFO:root:92
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='sequel'
    AND mi_idx.info > '5.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.3574092623353041 samples to be accurate, We have 50
INFO:root:Nearest query is 1
INFO:root:Current Query: ['votes', "k.keyword ='sequel'", "mi_idx.info > '5.0'", 't.production_year > 2000']
INFO:root:Robust plan is 1: 62.4
INFO:root:Postgres plan: 59.855
INFO:root:93
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'top 250 rank'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info > '6.5'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 9.334669886249284 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['top 250 rank', "k.keyword ='character-name-in-title'", "mi_idx.info > '6.5'", 't.production_year > 2005']
INFO:root:Robust plan is 6: 141.971
INFO:root:Postgres plan: 123.773
INFO:root:94
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('murder', 'murder-in-title')
    AND mi_idx.info > '8.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.5655052815432395 samples to be accurate, We have 50
INFO:root:Nearest query is 7
INFO:root:Current Query: ['votes', "k.keyword IN ('murder', 'murder-in-title')", "mi_idx.info > '8.0'", 't.production_year > 2000']
INFO:root:Robust plan is 5: 277.067
INFO:root:Postgres plan: 91.087
INFO:root:95
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
    AND mi_idx.info < '3.0'
    AND t.production_year > 1950
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.2172233098532779 samples to be accurate, We have 50
INFO:root:Nearest query is 0
INFO:root:Current Query: ['votes', "k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')", "mi_idx.info < '3.0'", 't.production_year > 1950']
INFO:root:Robust plan is 6: 190.395
INFO:root:Postgres plan: 144.591
INFO:root:96
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword ='character-name-in-title'
    AND mi_idx.info > '8.0'
    AND t.production_year > 2005
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.564409473495161 samples to be accurate, We have 50
INFO:root:Nearest query is 3
INFO:root:Current Query: ['votes', "k.keyword ='character-name-in-title'", "mi_idx.info > '8.0'", 't.production_year > 2005']
INFO:root:Robust plan is 4: 114.387
INFO:root:Postgres plan: 129.088
INFO:root:97
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'votes'
    AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')
    AND mi_idx.info > '6.5'
    AND t.production_year BETWEEN 2000 AND 2010
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 0.1539350409420692 samples to be accurate, We have 50
INFO:root:Nearest query is 2
INFO:root:Current Query: ['votes', "k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence')", "mi_idx.info > '6.5'", 't.production_year BETWEEN 2000 AND 2010']
INFO:root:Robust plan is 6: 176.319
INFO:root:Postgres plan: 180.946
INFO:root:98
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'rating'
    AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
    AND  mi_idx.info < '7.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 3.3352467300252924 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['rating', "k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')", " mi_idx.info < '7.0'", 't.production_year > 2000']
INFO:root:Robust plan is 7: 333.989
INFO:root:Postgres plan: 439.151
INFO:root:99
INFO:root:
    SELECT MIN(mi_idx.info) AS rating,
       MIN(t.title) AS movie_title
    FROM info_type AS it,
        keyword AS k,
        movie_info_idx AS mi_idx,
        movie_keyword AS mk,
        title AS t
    WHERE it.info = 'top 250 rank'
    AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')
    AND  mi_idx.info < '7.0'
    AND t.production_year > 2000
    AND t.id = mi_idx.movie_id
    AND t.id = mk.movie_id
    AND mk.movie_id = mi_idx.movie_id
    AND k.id = mk.keyword_id
    AND it.id = mi_idx.info_type_id;
    
INFO:root:--- PQO: Need 1.0703733131479798 samples to be accurate, We have 50
INFO:root:Nearest query is 4
INFO:root:Current Query: ['top 250 rank', "k.keyword IN ('nerd', 'loner', 'alienation', 'dignity')", " mi_idx.info < '7.0'", 't.production_year > 2000']
INFO:root:Robust plan is 7: 131.753
INFO:root:Postgres plan: 36.581
