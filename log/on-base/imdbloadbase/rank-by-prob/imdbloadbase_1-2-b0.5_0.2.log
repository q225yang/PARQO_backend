INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 0.5
INFO:root:Recentered plan cost = 30510.11, plan is: /*+
SeqScan(mc)
SeqScan(ct)
IndexScan(mi_idx)
SeqScan(it)
IndexScan(t)
HashJoin ( mc ct )
NestLoop ( mc ct mi_idx )
HashJoin ( mc ct mi_idx it )
NestLoop ( mc ct mi_idx it t )
Leading ( ( ( ( ( mc ct ) mi_idx ) it ) t ) ) */
INFO:root:Sobols samples size: 3584
INFO:root:[((6, 'mi_idx_it_r.txt'), 0.9371223622867737), ((2, 'mc.txt'), -0.0027526099218422567), ((5, 'mc_ct_r.txt'), -7.222909166037938e-05), ((8, 't_mc_r.txt'), 2.9301950781058515e-05), ((7, 'mi_idx_mc_r.txt'), -1.9273083039951258e-05), ((9, 't_mi_idx__it.txt'), -1.6263904851570835e-07)]
INFO:root:Max absolute value 1: (2, 3) - Value: 0.0315938868686354
Max absolute value 2: (2, 5) - Value: 0.0315140656177973
Max absolute value 3: (2, 4) - Value: 0.03146910657833295
Max absolute value 4: (0, 1) - Value: 0.004445805214906458
Max absolute value 5: (0, 3) - Value: 0.004417992673583446

INFO:root:Sobols samples size: 1792
INFO:root:[((6, 'mi_idx_it_r.txt'), 1.03860731730657), ((2, 'mc.txt'), -0.0031421102398390267), ((5, 'mc_ct_r.txt'), -0.0004084744306952481), ((7, 'mi_idx_mc_r.txt'), 8.223568503322058e-05), ((8, 't_mc_r.txt'), 6.452299377596671e-05), ((9, 't_mi_idx__it.txt'), -8.28444488716806e-13)]
INFO:root:Max absolute value 1: (2, 4) - Value: -0.06909477377508028
Max absolute value 2: (2, 5) - Value: -0.06905529441990688
Max absolute value 3: (2, 3) - Value: -0.06903848471320444
Max absolute value 4: (0, 1) - Value: 0.00795224370006032
Max absolute value 5: (0, 5) - Value: 0.007933647202421039

INFO:root:Sobols samples size: 896
INFO:root:[((6, 'mi_idx_it_r.txt'), 1.353907425236055), ((5, 'mc_ct_r.txt'), -0.0009207218814664316), ((2, 'mc.txt'), 0.00026367598159400123), ((7, 'mi_idx_mc_r.txt'), 0.00010119818210593687), ((8, 't_mc_r.txt'), 8.75677242708895e-05), ((9, 't_mi_idx__it.txt'), -1.613169784986743e-12)]
INFO:root:Max absolute value 1: (2, 4) - Value: -0.2524526256944517
Max absolute value 2: (2, 5) - Value: -0.2523831141005457
Max absolute value 3: (2, 3) - Value: -0.2523564376335747
Max absolute value 4: (0, 2) - Value: -0.007499618362017957
Max absolute value 5: (1, 2) - Value: 0.007287522418830239

INFO:root:Sobols samples size: 448
INFO:root:[((6, 'mi_idx_it_r.txt'), 1.0585101303798623), ((2, 'mc.txt'), 0.0028913343390591564), ((5, 'mc_ct_r.txt'), -0.001613006609890935), ((7, 'mi_idx_mc_r.txt'), -5.3241259619706186e-05), ((8, 't_mc_r.txt'), 1.2832673506951566e-05), ((9, 't_mi_idx__it.txt'), 2.039652886796419e-07)]
INFO:root:Max absolute value 1: (2, 3) - Value: 0.19913249696471325
Max absolute value 2: (2, 5) - Value: 0.19907413577172203
Max absolute value 3: (2, 4) - Value: 0.19905378064790866
Max absolute value 4: (0, 5) - Value: -0.003605395482875807
Max absolute value 5: (0, 4) - Value: -0.0036053086287814555

INFO:root:Sobols samples size: 224
INFO:root:[((6, 'mi_idx_it_r.txt'), 0.7058795734954061), ((2, 'mc.txt'), 0.002138340001954374), ((5, 'mc_ct_r.txt'), -0.002008254796714082), ((7, 'mi_idx_mc_r.txt'), -7.053429274073024e-05), ((8, 't_mc_r.txt'), -1.1010292157257853e-05), ((9, 't_mi_idx__it.txt'), 4.018369354638882e-07)]
INFO:root:Max absolute value 1: (2, 3) - Value: 0.8627018814318558
Max absolute value 2: (2, 5) - Value: 0.8626536072899128
Max absolute value 3: (2, 4) - Value: 0.8626395575285788
Max absolute value 4: (0, 2) - Value: -0.0022498107685181568
Max absolute value 5: (1, 3) - Value: 0.0020970891166566135

INFO:root:Sobols samples size: 112
INFO:root:[((6, 'mi_idx_it_r.txt'), 0.9626821338611545), ((2, 'mc.txt'), 0.003069542215638532), ((5, 'mc_ct_r.txt'), -0.0019954075671472673), ((7, 'mi_idx_mc_r.txt'), -4.5483126303159004e-05), ((8, 't_mc_r.txt'), 1.3686313865297116e-06), ((9, 't_mi_idx__it.txt'), 8.64322493503985e-07)]
INFO:root:Max absolute value 1: (2, 3) - Value: 0.526669461390797
Max absolute value 2: (2, 5) - Value: 0.5266151473019804
Max absolute value 3: (2, 4) - Value: 0.5265950783098394
Max absolute value 4: (0, 1) - Value: -0.004261848847689098
Max absolute value 5: (0, 3) - Value: -0.0042615422755315725

INFO:root:Sobol's solving time: 167.128422498703(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 3
INFO:root:Instance id = None, Error div = 2, bandwidth = 0.5, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 4 plan: 	[(0, 30409.53), (1, 30408.77), (2, 30411.4), (3, 20052.34)]
INFO:root:Sensitive predicates: [2, 6]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [1], overhead 9.556358098983765s
INFO:root:exp_penalty_w_tol: 	[(0, 2842), (1, 2841), (2, 2844), (3, 95617)]
INFO:root:### Best plan by std penalty: [1], overhead 9.556358098983765s
INFO:root:std_penalty: 	[(0, 5683.919848308293), (1, 5683.010359528126), (2, 5688.119679772742), (3, 80083.82128846148)]
INFO:root:### Best plan by prob of penalized: [0, 1, 2], overhead 9.556358098983765s
INFO:root:std_penalty: 	[(0, 0.2), (1, 0.2), (2, 0.2), (3, 0.8)]
