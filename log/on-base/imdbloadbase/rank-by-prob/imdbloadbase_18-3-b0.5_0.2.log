INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 1.0
INFO:root:Recentered plan cost = 101632.12, plan is: /*+
SeqScan(n)
IndexScan(ci)
IndexScan(mi_idx)
IndexScan(it2)
IndexScan(t)
IndexScan(mi)
IndexScan(it1)
NestLoop ( n ci )
NestLoop ( n ci mi_idx )
NestLoop ( n ci mi_idx it2 )
NestLoop ( n ci mi_idx it2 t )
NestLoop ( n ci mi_idx it2 t mi )
NestLoop ( n ci mi_idx it2 t mi it1 )
Leading ( ( ( ( ( ( ( n ci ) mi_idx ) it2 ) t ) mi ) it1 ) ) */
INFO:root:Sobols samples size: 6144
INFO:root:[((5, 'n.txt'), 1.2241841199025167), ((12, 'mi_idx_it_r.txt'), 0.014735299454737116), ((15, 't_mi_idx__it.txt'), 0.0018130291850040605), ((8, 'mi_idx_ci_r.txt'), -0.0001858084554785978), ((13, 'mi_idx_mi__it.txt'), -0.00011251049484557401), ((7, 'mi_mc_pure.txt'), -0.00010530196515822109), ((9, 'n_ci_both.txt'), -7.630131109084918e-05), ((0, 'ci.txt'), 6.030022067203574e-05), ((11, 'mi_it_r.txt'), -5.804857099875757e-05), ((10, 't_ci_r.txt'), 2.0087127076468654e-05), ((14, 't_mi__it.txt'), -1.3264918675001985e-05)]
INFO:root:Max absolute value 1: (1, 7) - Value: -0.4174416438837329
Max absolute value 2: (1, 10) - Value: -0.4024892661906987
Max absolute value 3: (1, 5) - Value: -0.3876030452731306
Max absolute value 4: (1, 9) - Value: -0.3858541333296995
Max absolute value 5: (1, 4) - Value: -0.3856102300309932

INFO:root:Sobols samples size: 3072
INFO:root:[((5, 'n.txt'), 0.9684393055825394), ((12, 'mi_idx_it_r.txt'), 0.013272128372279193), ((15, 't_mi_idx__it.txt'), 0.001670545284454109), ((8, 'mi_idx_ci_r.txt'), -0.00030323722576378097), ((13, 'mi_idx_mi__it.txt'), -0.00023256516387992025), ((11, 'mi_it_r.txt'), -0.00012197317166573393), ((0, 'ci.txt'), 0.00011141425421237218), ((10, 't_ci_r.txt'), 8.665760404511182e-05), ((7, 'mi_mc_pure.txt'), -5.9823784264558806e-05), ((14, 't_mi__it.txt'), -5.4746908793815945e-05), ((9, 'n_ci_both.txt'), 2.760094944319221e-05)]
INFO:root:Max absolute value 1: (1, 3) - Value: 0.16727013670860316
Max absolute value 2: (1, 8) - Value: 0.16709740243186066
Max absolute value 3: (1, 4) - Value: 0.1669119304141742
Max absolute value 4: (1, 6) - Value: 0.16546433841006503
Max absolute value 5: (1, 2) - Value: 0.16537277600925165

INFO:root:Sobols samples size: 1536
INFO:root:[((5, 'n.txt'), 0.8759610472589212), ((12, 'mi_idx_it_r.txt'), 0.011947329722502769), ((15, 't_mi_idx__it.txt'), 0.0025086281348688758), ((11, 'mi_it_r.txt'), -0.00020932705441156676), ((7, 'mi_mc_pure.txt'), -0.00019097704051352417), ((10, 't_ci_r.txt'), 0.00011409233810546517), ((13, 'mi_idx_mi__it.txt'), 9.661947488120342e-05), ((9, 'n_ci_both.txt'), -6.40506353124902e-05), ((8, 'mi_idx_ci_r.txt'), -4.497612298418984e-05), ((0, 'ci.txt'), -1.7441871487561513e-05), ((14, 't_mi__it.txt'), 9.46639963735699e-06)]
INFO:root:Max absolute value 1: (1, 4) - Value: 0.3987700499186671
Max absolute value 2: (1, 3) - Value: 0.3977206557011422
Max absolute value 3: (1, 6) - Value: 0.39640914658985926
Max absolute value 4: (1, 2) - Value: 0.39639955328409604
Max absolute value 5: (1, 9) - Value: 0.3942573465532652

INFO:root:Sobols samples size: 768
INFO:root:[((5, 'n.txt'), 0.837735079952037), ((12, 'mi_idx_it_r.txt'), 0.005581722124624139), ((0, 'ci.txt'), -0.000720720408694772), ((15, 't_mi_idx__it.txt'), -0.0004427330502979192), ((14, 't_mi__it.txt'), -0.0001831967073400075), ((9, 'n_ci_both.txt'), -8.425445343859804e-05), ((7, 'mi_mc_pure.txt'), 8.350170863125902e-05), ((8, 'mi_idx_ci_r.txt'), -7.76964605929126e-05), ((10, 't_ci_r.txt'), 3.386082248016159e-05), ((11, 'mi_it_r.txt'), 2.5007423979397864e-05), ((13, 'mi_idx_mi__it.txt'), -7.641724979065037e-06)]
INFO:root:Max absolute value 1: (1, 7) - Value: 0.5379635306774707
Max absolute value 2: (1, 4) - Value: 0.5317119375958261
Max absolute value 3: (1, 3) - Value: 0.5302092258040666
Max absolute value 4: (1, 9) - Value: 0.524751793611964
Max absolute value 5: (1, 8) - Value: 0.5240422538316417

INFO:root:Sobols samples size: 384
INFO:root:[((5, 'n.txt'), 1.5033026259368438), ((12, 'mi_idx_it_r.txt'), 0.0036316754785252576), ((9, 'n_ci_both.txt'), 0.0007259663731010393), ((0, 'ci.txt'), -0.0006007831622881618), ((7, 'mi_mc_pure.txt'), 0.00024074031328999524), ((8, 'mi_idx_ci_r.txt'), 0.00013770752834143182), ((11, 'mi_it_r.txt'), 3.514926032658658e-05), ((10, 't_ci_r.txt'), -2.083243652952163e-05), ((15, 't_mi_idx__it.txt'), -6.3040752208705625e-06), ((13, 'mi_idx_mi__it.txt'), 0.0), ((14, 't_mi__it.txt'), 0.0)]
INFO:root:Max absolute value 1: (1, 7) - Value: -0.8508104334578863
Max absolute value 2: (1, 4) - Value: -0.8383994050026538
Max absolute value 3: (1, 2) - Value: -0.8378034543821291
Max absolute value 4: (1, 3) - Value: -0.837435347760642
Max absolute value 5: (1, 6) - Value: -0.8369812055261152

INFO:root:Sobols samples size: 192
INFO:root:[((5, 'n.txt'), 1.974921959975612), ((12, 'mi_idx_it_r.txt'), 0.005536164546341001), ((9, 'n_ci_both.txt'), 0.0014576241633552773), ((0, 'ci.txt'), -0.0010367469818442477), ((7, 'mi_mc_pure.txt'), 0.00037612807180276473), ((8, 'mi_idx_ci_r.txt'), 0.00022289085217826456), ((11, 'mi_it_r.txt'), 7.551421600917911e-05), ((10, 't_ci_r.txt'), 1.975925555971742e-05), ((15, 't_mi_idx__it.txt'), -1.0841891416489897e-05), ((13, 'mi_idx_mi__it.txt'), 0.0), ((14, 't_mi__it.txt'), 0.0)]
INFO:root:Max absolute value 1: (1, 4) - Value: -1.7639353438468912
Max absolute value 2: (1, 7) - Value: -1.7622319812052645
Max absolute value 3: (1, 2) - Value: -1.7611043936623076
Max absolute value 4: (1, 3) - Value: -1.7606976743823664
Max absolute value 5: (1, 6) - Value: -1.760317453241862

INFO:root:Sobol's solving time: 342.3342008590698(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 2
INFO:root:Instance id = None, Error div = 2, bandwidth = 1.0, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 9 plan: 	[(0, 344655.32), (1, 77917.69), (2, 77915.34), (3, 78132.65), (4, 79225.66), (5, 148554.88), (6, 148557.12), (7, 148574.17), (8, 148559.21)]
INFO:root:Sensitive predicates: [5, 12]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [8], overhead 25.388477563858032s
INFO:root:exp_penalty_w_tol: 	[(0, 194443), (1, 2723673), (2, 2723683), (3, 2726881), (4, 2734954), (5, 107427), (6, 107413), (7, 107501), (8, 107411)]
INFO:root:### Best plan by std penalty: [0], overhead 25.388477563858032s
INFO:root:std_penalty: 	[(0, 104280.1234322313), (1, 2172369.9223173484), (2, 2172377.292111596), (3, 2174832.694586999), (4, 2181028.8788094623), (5, 340536.4291306632), (6, 340493.32939094794), (7, 340761.1866690594), (8, 340486.0967572391)]
INFO:root:### Best plan by prob of penalized: [5, 6, 7, 8], overhead 25.388477563858032s
INFO:root:std_penalty: 	[(0, 0.88), (1, 0.94), (2, 0.94), (3, 0.94), (4, 0.94), (5, 0.14), (6, 0.14), (7, 0.14), (8, 0.14)]
