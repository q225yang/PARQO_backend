INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 0.5
INFO:root:Recentered plan cost = 313484.62, plan is: /*+
IndexScan(t)
SeqScan(mi_idx)
SeqScan(it2)
IndexScan(ci)
IndexScan(n)
IndexScan(mi)
SeqScan(it1)
HashJoin ( mi_idx it2 )
MergeJoin ( t mi_idx it2 )
NestLoop ( t mi_idx it2 ci )
NestLoop ( t mi_idx it2 ci n )
NestLoop ( t mi_idx it2 ci n mi )
HashJoin ( t mi_idx it2 ci n mi it1 )
Leading ( ( ( ( ( ( t ( mi_idx it2 ) ) ci ) n ) mi ) it1 ) ) */
INFO:root:Sobols samples size: 6144
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.176756902733792), ((5, 'n.txt'), 0.051959338378293994), ((15, 't_mi_idx__it.txt'), 0.05135829257853799), ((8, 'mi_idx_ci_r.txt'), 0.032222619737821784), ((10, 't_ci_r.txt'), -0.003390604124026733), ((0, 'ci.txt'), 0.0025100887969699594), ((11, 'mi_it_r.txt'), 0.0007340920405751464), ((9, 'n_ci_both.txt'), -0.0003348025151699079), ((14, 't_mi__it.txt'), -0.00019874044626247612), ((13, 'mi_idx_mi__it.txt'), -5.513350704406952e-05), ((7, 'mi_mc_pure.txt'), -4.217206544886229e-06)]
INFO:root:Max absolute value 1: (1, 3) - Value: -0.20874211319760164
Max absolute value 2: (1, 4) - Value: -0.18390938888201347
Max absolute value 3: (1, 9) - Value: -0.18337990800708714
Max absolute value 4: (1, 2) - Value: -0.18337401879321918
Max absolute value 5: (1, 8) - Value: -0.18335805168063987

INFO:root:Sobols samples size: 3072
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.11130211124950078), ((5, 'n.txt'), 0.06365865421675776), ((8, 'mi_idx_ci_r.txt'), 0.038541301063823113), ((10, 't_ci_r.txt'), -0.0038558917518456064), ((15, 't_mi_idx__it.txt'), -0.0037751896884912397), ((9, 'n_ci_both.txt'), -0.0028347005416756743), ((0, 'ci.txt'), 0.0010210117762141156), ((11, 'mi_it_r.txt'), 0.000580930962611814), ((14, 't_mi__it.txt'), -9.380560788389384e-05), ((13, 'mi_idx_mi__it.txt'), 3.055476343816354e-05), ((7, 'mi_mc_pure.txt'), 6.084365279112629e-06)]
INFO:root:Max absolute value 1: (1, 3) - Value: -0.25544075657071974
Max absolute value 2: (1, 4) - Value: -0.22572034733857302
Max absolute value 3: (1, 6) - Value: -0.22495869145285277
Max absolute value 4: (1, 9) - Value: -0.22495269253934125
Max absolute value 5: (1, 2) - Value: -0.22495164543802004

INFO:root:Sobols samples size: 1536
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.6057696012227125), ((15, 't_mi_idx__it.txt'), 0.22789640682700346), ((10, 't_ci_r.txt'), 0.03720807367280378), ((0, 'ci.txt'), -0.006578277728837856), ((5, 'n.txt'), 0.0031587862017718907), ((8, 'mi_idx_ci_r.txt'), 0.0029084434008900275), ((11, 'mi_it_r.txt'), -0.0019114289435302372), ((13, 'mi_idx_mi__it.txt'), 0.0011661113074680886), ((9, 'n_ci_both.txt'), 0.0008283964032438149), ((14, 't_mi__it.txt'), 0.0003331926006111936), ((7, 'mi_mc_pure.txt'), -6.108549735387496e-06)]
INFO:root:Max absolute value 1: (7, 10) - Value: 0.3642339828115218
Max absolute value 2: (7, 8) - Value: -0.08942618265081055
Max absolute value 3: (7, 9) - Value: -0.08880182115001294
Max absolute value 4: (3, 7) - Value: 0.04406901035412103
Max absolute value 5: (5, 7) - Value: -0.03709865205808949

INFO:root:Sobols samples size: 768
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.606103809127307), ((15, 't_mi_idx__it.txt'), 0.20990732246363109), ((9, 'n_ci_both.txt'), 0.016262544139139974), ((0, 'ci.txt'), 0.012699757380504165), ((8, 'mi_idx_ci_r.txt'), -0.005221223649476344), ((10, 't_ci_r.txt'), 0.0024435514070407804), ((5, 'n.txt'), 0.0017438219189628928), ((13, 'mi_idx_mi__it.txt'), 0.0012353428324365578), ((14, 't_mi__it.txt'), 0.0006045536504674725), ((11, 'mi_it_r.txt'), 0.00029613666038983983), ((7, 'mi_mc_pure.txt'), -4.072599135481827e-05)]
INFO:root:Max absolute value 1: (7, 10) - Value: 0.1800007895231347
Max absolute value 2: (7, 9) - Value: 0.05220610123035246
Max absolute value 3: (7, 8) - Value: 0.05138027955592537
Max absolute value 4: (4, 6) - Value: -0.03257751562298264
Max absolute value 5: (4, 9) - Value: -0.032577462124388334

INFO:root:Sobols samples size: 384
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.6168868835784707), ((15, 't_mi_idx__it.txt'), 0.20286040640364494), ((0, 'ci.txt'), 0.01982131037571356), ((5, 'n.txt'), -0.008605172791547275), ((9, 'n_ci_both.txt'), 0.006778673301867848), ((8, 'mi_idx_ci_r.txt'), -0.005152087648351359), ((10, 't_ci_r.txt'), 0.004438167764278723), ((11, 'mi_it_r.txt'), -0.00035132919932771904), ((7, 'mi_mc_pure.txt'), -0.00019555717927891464), ((13, 'mi_idx_mi__it.txt'), -2.7258033848997117e-09), ((14, 't_mi__it.txt'), 0.0)]
INFO:root:Max absolute value 1: (7, 10) - Value: 0.12668449403304244
Max absolute value 2: (1, 3) - Value: 0.047427993592379834
Max absolute value 3: (1, 5) - Value: 0.04291071200755605
Max absolute value 4: (1, 8) - Value: 0.04158261398935231
Max absolute value 5: (1, 9) - Value: 0.041582613831436174

INFO:root:Sobols samples size: 192
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.5818920508668747), ((15, 't_mi_idx__it.txt'), 0.25987253740219074), ((5, 'n.txt'), 0.0506714246305666), ((9, 'n_ci_both.txt'), 0.03370728589876777), ((0, 'ci.txt'), 0.032286998633659546), ((8, 'mi_idx_ci_r.txt'), -0.021056732460826986), ((10, 't_ci_r.txt'), -0.005303515253891592), ((7, 'mi_mc_pure.txt'), 0.00019471313038535936), ((11, 'mi_it_r.txt'), 2.8934812683060568e-05), ((13, 'mi_idx_mi__it.txt'), -3.235266212262784e-09), ((14, 't_mi__it.txt'), 0.0)]
INFO:root:Max absolute value 1: (7, 10) - Value: 0.23827742576597388
Max absolute value 2: (7, 8) - Value: 0.21376919759413998
Max absolute value 3: (7, 9) - Value: 0.21376919015220175
Max absolute value 4: (3, 7) - Value: 0.099024460023451
Max absolute value 5: (0, 1) - Value: -0.06913278145775234

INFO:root:Sobol's solving time: 348.3106129169464(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 0
INFO:root:Instance id = None, Error div = 2, bandwidth = 0.5, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 13 plan: 	[(0, 349997.72), (1, 350003.65), (2, 352617.68), (3, 552709.3), (4, 605536.9), (5, 605382.64), (6, 605546.01), (7, 605391.74), (8, 604821.79), (9, 604830.89), (10, 606843.6), (11, 606689.34), (12, 606128.49)]
INFO:root:Sensitive predicates: [5, 12, 15]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [1], overhead 36.611435651779175s
INFO:root:exp_penalty_w_tol: 	[(0, 188184), (1, 188169), (2, 220859), (3, 374713), (4, 4234857), (5, 4225087), (6, 4232988), (7, 4223603), (8, 4222443), (9, 4220958), (10, 4242393), (11, 4233008), (12, 4230468)]
INFO:root:### Best plan by std penalty: [0], overhead 36.611435651779175s
INFO:root:std_penalty: 	[(0, 158027.59193537632), (1, 158032.91964691726), (2, 168331.74880961597), (3, 185990.69459787753), (4, 9750727.948651703), (5, 9730072.396672126), (6, 9746774.216627792), (7, 9726936.933431167), (8, 9724002.76562378), (9, 9720867.305846455), (10, 9768800.977370005), (11, 9748970.724583462), (12, 9743140.164776325)]
INFO:root:### Best plan by prob of penalized: [0, 1], overhead 36.611435651779175s
INFO:root:std_penalty: 	[(0, 0.6), (1, 0.6), (2, 0.68), (3, 0.92), (4, 0.62), (5, 0.62), (6, 0.62), (7, 0.62), (8, 0.62), (9, 0.62), (10, 0.62), (11, 0.62), (12, 0.62)]
