INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 0.5
INFO:root:Recentered plan cost = 87121.2, plan is: /*+
SeqScan(k)
IndexScan(mk)
IndexScan(ci)
SeqScan(n)
IndexOnlyScan(t)
IndexScan(mc)
IndexScan(cn)
NestLoop ( k mk )
NestLoop ( k mk ci )
HashJoin ( k mk ci n )
NestLoop ( k mk ci n t )
NestLoop ( k mk ci n t mc )
NestLoop ( k mk ci n t mc cn )
Leading ( ( ( ( ( ( ( k mk ) ci ) n ) t ) mc ) cn ) ) */
INFO:root:Sobols samples size: 6656
INFO:root:[((12, 'mk_k_r.txt'), 0.4247596276542598), ((2, 'k.txt'), 0.14821053139916915), ((5, 'n.txt'), 0.13597751628333915), ((8, 'mk_ci__q17.txt'), 0.019307042517105657), ((7, 'ci_mc__q17.txt'), -0.016112622014970043), ((11, 'mc_cn_r.txt'), 0.010931321716647993), ((1, 'cn.txt'), -0.009104250710482226), ((9, 'n_ci_l.txt'), -0.007672019773686276), ((13, 'mk_mc__q2.txt'), -0.0071390790567926205), ((10, 't_ci__n.txt'), -0.0041169158589326954), ((15, 't_mk__k.txt'), -0.001542434279592103), ((14, 't_mc__cn.txt'), 0.0005432840689913513)]
INFO:root:Max absolute value 1: (1, 2) - Value: -0.09350892087840382
Max absolute value 2: (2, 8) - Value: 0.07166043993590249
Max absolute value 3: (8, 10) - Value: -0.07082092169865661
Max absolute value 4: (8, 9) - Value: -0.06324115342429931
Max absolute value 5: (8, 11) - Value: -0.05965984266502445

INFO:root:Sobols samples size: 3328
INFO:root:[((12, 'mk_k_r.txt'), 0.43355578771848435), ((5, 'n.txt'), 0.18002270183628052), ((2, 'k.txt'), 0.15098854137606596), ((9, 'n_ci_l.txt'), -0.027965679038380906), ((11, 'mc_cn_r.txt'), 0.016907852491710163), ((13, 'mk_mc__q2.txt'), -0.014359089819561745), ((1, 'cn.txt'), -0.010143884688867977), ((10, 't_ci__n.txt'), -0.008406997159987767), ((8, 'mk_ci__q17.txt'), -0.005411127988582421), ((15, 't_mk__k.txt'), -0.0021644532878797753), ((14, 't_mc__cn.txt'), -0.0006309815525936038), ((7, 'ci_mc__q17.txt'), 0.0005446939264109134)]
INFO:root:Max absolute value 1: (1, 2) - Value: -0.21082653609439056
Max absolute value 2: (1, 7) - Value: -0.1307366427620051
Max absolute value 3: (1, 3) - Value: -0.1281312656698695
Max absolute value 4: (1, 11) - Value: -0.12612192598770797
Max absolute value 5: (1, 9) - Value: -0.12517546021011336

INFO:root:Sobols samples size: 1664
INFO:root:[((12, 'mk_k_r.txt'), 0.4086292861666454), ((2, 'k.txt'), 0.23763038100520636), ((5, 'n.txt'), 0.188179330656464), ((9, 'n_ci_l.txt'), 0.015360376581302312), ((13, 'mk_mc__q2.txt'), -0.008935030716532621), ((8, 'mk_ci__q17.txt'), 0.00608187614005929), ((10, 't_ci__n.txt'), -0.004667463080829557), ((7, 'ci_mc__q17.txt'), -0.00380210798655647), ((1, 'cn.txt'), -0.003655077042337892), ((15, 't_mk__k.txt'), 0.003025384463609112), ((11, 'mc_cn_r.txt'), 0.001969267472051074), ((14, 't_mc__cn.txt'), 0.0007851878241120445)]
INFO:root:Max absolute value 1: (1, 2) - Value: -0.3109044980126331
Max absolute value 2: (8, 9) - Value: -0.29808549745272317
Max absolute value 3: (8, 10) - Value: -0.2913901358053758
Max absolute value 4: (8, 11) - Value: -0.28257998793815037
Max absolute value 5: (1, 7) - Value: -0.2361844643252149

INFO:root:Sobols samples size: 832
INFO:root:[((5, 'n.txt'), 0.3578921347806476), ((2, 'k.txt'), 0.17226180288037382), ((12, 'mk_k_r.txt'), 0.13068786477755634), ((9, 'n_ci_l.txt'), 0.04826468014301097), ((13, 'mk_mc__q2.txt'), -0.022537334368078584), ((11, 'mc_cn_r.txt'), 0.014366845018520204), ((8, 'mk_ci__q17.txt'), 0.011285187160240257), ((10, 't_ci__n.txt'), -0.011244743777035928), ((7, 'ci_mc__q17.txt'), -0.01092539014516744), ((15, 't_mk__k.txt'), 0.003145360095565907), ((14, 't_mc__cn.txt'), 0.0019505453780265744), ((1, 'cn.txt'), 0.0019127171570570388)]
INFO:root:Max absolute value 1: (2, 8) - Value: -0.285081277310122
Max absolute value 2: (4, 5) - Value: 0.2796956312807194
Max absolute value 3: (4, 8) - Value: 0.26211862695466087
Max absolute value 4: (8, 11) - Value: 0.2538336579472559
Max absolute value 5: (4, 7) - Value: 0.24035478333257032

INFO:root:Sobols samples size: 416
INFO:root:[((5, 'n.txt'), 0.38865747727166156), ((12, 'mk_k_r.txt'), 0.08058998551658361), ((2, 'k.txt'), 0.036918499831237385), ((11, 'mc_cn_r.txt'), 0.03640460294672876), ((9, 'n_ci_l.txt'), 0.03327413161674868), ((15, 't_mk__k.txt'), 0.02746498153147495), ((13, 'mk_mc__q2.txt'), 0.011866213209936534), ((10, 't_ci__n.txt'), -0.009437463969367465), ((1, 'cn.txt'), 0.0067549621931030125), ((8, 'mk_ci__q17.txt'), 0.005294524009813798), ((14, 't_mc__cn.txt'), 0.0050344739324784315), ((7, 'ci_mc__q17.txt'), -0.00427172442758328)]
INFO:root:Max absolute value 1: (4, 8) - Value: 0.5642091575798002
Max absolute value 2: (2, 8) - Value: -0.4942171195966646
Max absolute value 3: (4, 5) - Value: 0.48175916522244394
Max absolute value 4: (2, 5) - Value: -0.4132020174530276
Max absolute value 5: (4, 7) - Value: 0.3948870966360215

INFO:root:Sobols samples size: 208
INFO:root:[((5, 'n.txt'), 0.4459716842167426), ((8, 'mk_ci__q17.txt'), 0.11964627498731523), ((12, 'mk_k_r.txt'), 0.06502250680633048), ((9, 'n_ci_l.txt'), 0.055604315685945954), ((15, 't_mk__k.txt'), -0.024552481085322327), ((14, 't_mc__cn.txt'), 0.01369295428885415), ((11, 'mc_cn_r.txt'), 0.010732751260192639), ((1, 'cn.txt'), 0.009941230088624253), ((13, 'mk_mc__q2.txt'), 0.007101228533677395), ((10, 't_ci__n.txt'), -0.006219140413238219), ((2, 'k.txt'), -0.0039011617418754745), ((7, 'ci_mc__q17.txt'), -0.001450476266162241)]
INFO:root:Max absolute value 1: (4, 8) - Value: 0.6924017507473633
Max absolute value 2: (4, 5) - Value: 0.6846332082338672
Max absolute value 3: (2, 5) - Value: -0.5766895000567058
Max absolute value 4: (2, 4) - Value: -0.5447698025697654
Max absolute value 5: (2, 8) - Value: -0.5329080557196042

INFO:root:Sobols samples size: 104
INFO:root:[((1, 'cn.txt'), 0.305378752808321), ((13, 'mk_mc__q2.txt'), 0.278521808427875), ((10, 't_ci__n.txt'), -0.1978810396243748), ((8, 'mk_ci__q17.txt'), -0.15440298594805774), ((11, 'mc_cn_r.txt'), -0.1453637543702179), ((2, 'k.txt'), -0.05936598854384663), ((5, 'n.txt'), 0.05737618547991205), ((12, 'mk_k_r.txt'), 0.02510098973733026), ((7, 'ci_mc__q17.txt'), -0.02095630109611195), ((15, 't_mk__k.txt'), 0.01287610225983238), ((9, 'n_ci_l.txt'), -0.002597684450938159), ((14, 't_mc__cn.txt'), 0.0)]
INFO:root:Max absolute value 1: (8, 10) - Value: 0.7275758103394846
Max absolute value 2: (8, 11) - Value: 0.6975268130451083
Max absolute value 3: (4, 6) - Value: 0.5906475928486652
Max absolute value 4: (4, 7) - Value: 0.5233059689795355
Max absolute value 5: (4, 8) - Value: 0.4904950090315851

INFO:root:Sobol's solving time: 378.7706456184387(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 1
INFO:root:Instance id = None, Error div = 2, bandwidth = 0.5, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 6 plan: 	[(0, 4572.9), (1, 4553.64), (2, 73713.68), (3, 150217.12), (4, 149807.63), (5, 49841.78)]
INFO:root:Sensitive predicates: [2, 5, 12]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [2], overhead 17.20212721824646s
INFO:root:exp_penalty_w_tol: 	[(0, 620388), (1, 636135), (2, 63730), (3, 123557), (4, 121131), (5, 203985)]
INFO:root:### Best plan by std penalty: [2], overhead 17.20212721824646s
INFO:root:std_penalty: 	[(0, 1199312.7736519498), (1, 1226837.3422754074), (2, 90498.12827265082), (3, 182938.56152294006), (4, 177386.70807709525), (5, 377804.6847256725)]
INFO:root:### Best plan by prob of penalized: [0, 1], overhead 17.20212721824646s
INFO:root:std_penalty: 	[(0, 0.64), (1, 0.64), (2, 0.68), (3, 0.68), (4, 0.68), (5, 0.98)]
