INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 0.5
INFO:root:Recentered plan cost = 17526.31, plan is: /*+
SeqScan(k)
IndexScan(mk)
SeqScan(cct1)
IndexScan(cc)
SeqScan(cct2)
IndexScan(t)
IndexScan(kt)
IndexScan(ci)
IndexScan(chn)
IndexOnlyScan(n)
NestLoop ( k mk )
NestLoop ( cct1 cc )
HashJoin ( cct1 cc cct2 )
HashJoin ( k mk cct1 cc cct2 )
NestLoop ( k mk cct1 cc cct2 t )
NestLoop ( k mk cct1 cc cct2 t kt )
NestLoop ( k mk cct1 cc cct2 t kt ci )
NestLoop ( k mk cct1 cc cct2 t kt ci chn )
NestLoop ( k mk cct1 cc cct2 t kt ci chn n )
Leading ( ( ( ( ( ( ( ( k mk ) ( ( cct1 cc ) cct2 ) ) t ) kt ) ci ) chn ) n ) ) */
INFO:root:Sobols samples size: 9216
INFO:root:[((5, 'k.txt'), 0.20958727385533366), ((10, 'cct_cc_1_l.txt'), 0.11048181537564905), ((1, 'cct.txt'), 0.05935527731093482), ((13, 'mk_cc__cct.txt'), 0.020676696740940533), ((11, 'cct_cc_2_l.txt'), 0.020658135097134264), ((19, 'mk_k_r.txt'), 0.00875056746125309), ((2, 'cct.txt'), -0.0012461410605666117), ((14, 't_cc_l.txt'), 0.0004563030558677858), ((9, 't.txt'), 0.00037473794096197564), ((12, 'ci_cc__cct.txt'), -0.0003562421708254041), ((20, 't_kt_both.txt'), 6.27813991739205e-05), ((15, 'ci_chn_r.txt'), -5.112648421304732e-05), ((21, 't_mk_l.txt'), -3.79073347110879e-05), ((3, 'chn.txt'), -2.7691940140765423e-06), ((16, 'mk_ci__chn.txt'), 9.91957544742181e-10), ((17, 'n_ci__chn.txt'), 9.91957544742181e-10), ((18, 't_ci_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (6, 8) - Value: 0.2620860859570978
Max absolute value 2: (3, 5) - Value: -0.2615028701722132
Max absolute value 3: (3, 9) - Value: -0.14936591204098873
Max absolute value 4: (3, 4) - Value: -0.14913211370937104
Max absolute value 5: (3, 7) - Value: -0.14847140490574937

INFO:root:Sobols samples size: 4608
INFO:root:[((5, 'k.txt'), 0.16216521832539726), ((13, 'mk_cc__cct.txt'), 0.06527328570818464), ((1, 'cct.txt'), 0.03994043244118608), ((2, 'cct.txt'), 0.010378064248216792), ((19, 'mk_k_r.txt'), -0.0026962424415485514), ((10, 'cct_cc_1_l.txt'), 0.001956410131197474), ((9, 't.txt'), 0.0010401459570126299), ((14, 't_cc_l.txt'), 0.0008802866704565417), ((20, 't_kt_both.txt'), 0.0006399482826264483), ((12, 'ci_cc__cct.txt'), -0.000617417407494882), ((11, 'cct_cc_2_l.txt'), 0.00013932839221189833), ((21, 't_mk_l.txt'), -7.953061786515302e-05), ((15, 'ci_chn_r.txt'), -6.671200935376527e-05), ((3, 'chn.txt'), -5.826005888793497e-06), ((16, 'mk_ci__chn.txt'), -8.739020096261681e-10), ((17, 'n_ci__chn.txt'), -8.739020096261681e-10), ((18, 't_ci_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (6, 8) - Value: 0.49472411695681623
Max absolute value 2: (6, 9) - Value: 0.30220386386236975
Max absolute value 3: (6, 15) - Value: 0.3020536355401612
Max absolute value 4: (6, 16) - Value: 0.3002217509309227
Max absolute value 5: (6, 12) - Value: 0.2992081510150802

INFO:root:Sobols samples size: 2304
INFO:root:[((5, 'k.txt'), 0.30443015560584497), ((13, 'mk_cc__cct.txt'), 0.1371372113496418), ((2, 'cct.txt'), 0.04066752626685534), ((1, 'cct.txt'), 0.03499741357336043), ((11, 'cct_cc_2_l.txt'), -0.014848688837960275), ((19, 'mk_k_r.txt'), 0.01316248304825386), ((10, 'cct_cc_1_l.txt'), 0.005482289152661859), ((14, 't_cc_l.txt'), 0.0015750321075940518), ((9, 't.txt'), 0.001416651116062028), ((20, 't_kt_both.txt'), 0.0005913549572489357), ((21, 't_mk_l.txt'), -0.00016790266408117432), ((15, 'ci_chn_r.txt'), -0.00011369580319053917), ((12, 'ci_cc__cct.txt'), 1.1266650643718528e-05), ((3, 'chn.txt'), -3.070430424109355e-09), ((16, 'mk_ci__chn.txt'), 0.0), ((17, 'n_ci__chn.txt'), 0.0), ((18, 't_ci_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (6, 8) - Value: 0.8517105855550284
Max absolute value 2: (6, 16) - Value: 0.4632346728895169
Max absolute value 3: (6, 15) - Value: 0.46200307137924473
Max absolute value 4: (6, 7) - Value: 0.4616164674169594
Max absolute value 5: (6, 9) - Value: 0.46158630927413913

INFO:root:Sobols samples size: 1152
INFO:root:[((11, 'cct_cc_2_l.txt'), 0.1324452366854373), ((19, 'mk_k_r.txt'), 0.08242470335430428), ((5, 'k.txt'), 0.0795347880550865), ((13, 'mk_cc__cct.txt'), 0.07126221636706391), ((2, 'cct.txt'), 0.06106118455704143), ((10, 'cct_cc_1_l.txt'), 0.056701396465375094), ((1, 'cct.txt'), 0.03287541757886083), ((9, 't.txt'), 0.0016249164475195942), ((14, 't_cc_l.txt'), 0.0015948608227481745), ((20, 't_kt_both.txt'), 0.00044939965177064956), ((12, 'ci_cc__cct.txt'), 5.923027348537849e-05), ((15, 'ci_chn_r.txt'), -4.055760033709009e-05), ((21, 't_mk_l.txt'), 1.321472182364467e-06), ((3, 'chn.txt'), -1.1568869776891294e-08), ((16, 'mk_ci__chn.txt'), 0.0), ((17, 'n_ci__chn.txt'), 0.0), ((18, 't_ci_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (0, 6) - Value: 0.6480015323954823
Max absolute value 2: (0, 8) - Value: 0.3201883049253186
Max absolute value 3: (0, 14) - Value: 0.2482185786330619
Max absolute value 4: (0, 5) - Value: 0.2202336272484961
Max absolute value 5: (0, 10) - Value: 0.2090632065409137

INFO:root:Sobols samples size: 576
INFO:root:[((11, 'cct_cc_2_l.txt'), 0.10301064506232685), ((1, 'cct.txt'), 0.09028453278818974), ((5, 'k.txt'), 0.0825232968880653), ((2, 'cct.txt'), 0.08084823476535676), ((10, 'cct_cc_1_l.txt'), 0.07792527470909963), ((19, 'mk_k_r.txt'), 0.07751564329181128), ((13, 'mk_cc__cct.txt'), 0.07307839365728143), ((9, 't.txt'), 0.0002765291618579624), ((14, 't_cc_l.txt'), 0.00022814036743809866), ((12, 'ci_cc__cct.txt'), 0.00022324599739730367), ((20, 't_kt_both.txt'), 0.00021190823486087816), ((15, 'ci_chn_r.txt'), -6.53145121145232e-05), ((21, 't_mk_l.txt'), 2.0838683099580385e-06), ((3, 'chn.txt'), -1.0664603720418868e-08), ((16, 'mk_ci__chn.txt'), 0.0), ((17, 'n_ci__chn.txt'), 0.0), ((18, 't_ci_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (14, 16) - Value: -0.15349485144918595
Max absolute value 2: (14, 15) - Value: -0.15349311594665044
Max absolute value 3: (0, 6) - Value: -0.08603939153883637
Max absolute value 4: (0, 14) - Value: -0.07854405574702282
Max absolute value 5: (0, 8) - Value: -0.07697197838359386

INFO:root:Sobols samples size: 288
INFO:root:[((1, 'cct.txt'), 2.3449274295582176), ((5, 'k.txt'), 1.569183945567514), ((10, 'cct_cc_1_l.txt'), 0.4505943718783398), ((2, 'cct.txt'), 0.3387356751916611), ((13, 'mk_cc__cct.txt'), 0.322679557092749), ((11, 'cct_cc_2_l.txt'), 0.21650873848169744), ((19, 'mk_k_r.txt'), 0.17026565162532764), ((14, 't_cc_l.txt'), -7.697550199450755e-05), ((21, 't_mk_l.txt'), 6.260793540727926e-05), ((20, 't_kt_both.txt'), 5.839811123275045e-05), ((9, 't.txt'), 4.789146219591855e-05), ((12, 'ci_cc__cct.txt'), 2.6069482465145724e-07), ((3, 'chn.txt'), -2.7628858041713786e-17), ((15, 'ci_chn_r.txt'), 0.0), ((16, 'mk_ci__chn.txt'), 0.0), ((17, 'n_ci__chn.txt'), 0.0), ((18, 't_ci_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (0, 3) - Value: -3.640167997206479
Max absolute value 2: (14, 16) - Value: -3.059084640352907
Max absolute value 3: (14, 15) - Value: -3.05884669240542
Max absolute value 4: (0, 5) - Value: -1.823033758631314
Max absolute value 5: (0, 1) - Value: -1.778055788414083

INFO:root:Sobols samples size: 144
INFO:root:[((5, 'k.txt'), 0.29800306145184097), ((11, 'cct_cc_2_l.txt'), 0.2885800681218963), ((1, 'cct.txt'), 0.26600733342519933), ((2, 'cct.txt'), 0.26164606143697533), ((10, 'cct_cc_1_l.txt'), -0.04203154730266069), ((19, 'mk_k_r.txt'), 0.036305195675681176), ((13, 'mk_cc__cct.txt'), -0.005051867359229646), ((9, 't.txt'), -0.00012846663800177504), ((14, 't_cc_l.txt'), -9.528636659360379e-05), ((21, 't_mk_l.txt'), 9.205580760887282e-05), ((20, 't_kt_both.txt'), 5.7326569991619374e-05), ((12, 'ci_cc__cct.txt'), -6.178421260336385e-07), ((3, 'chn.txt'), 0.0), ((15, 'ci_chn_r.txt'), 0.0), ((16, 'mk_ci__chn.txt'), 0.0), ((17, 'n_ci__chn.txt'), 0.0), ((18, 't_ci_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (0, 14) - Value: 1.9758855654857828
Max absolute value 2: (0, 5) - Value: 1.6748447634451893
Max absolute value 3: (0, 8) - Value: 1.6377304741768437
Max absolute value 4: (0, 4) - Value: 1.6109552375571126
Max absolute value 5: (0, 9) - Value: 1.6109471548020742

INFO:root:Sobol's solving time: 831.778252363205(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 3
INFO:root:Instance id = None, Error div = 2, bandwidth = 0.5, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 14 plan: 	[(0, 15310.42), (1, 14654.52), (2, 11982.23), (3, 11972.06), (4, 11972.06), (5, 11972.06), (6, 11972.06), (7, 49866.63), (8, 49866.72), (9, 11972.06), (10, 11972.06), (11, 11972.06), (12, 14630.19), (13, 14631.1)]
INFO:root:Sensitive predicates: [1, 5, 10]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [12, 13], overhead 63.630945444107056s
INFO:root:exp_penalty_w_tol: 	[(0, 2250), (1, 3134), (2, 26323), (3, 24781), (4, 24788), (5, 24782), (6, 13191), (7, 31679), (8, 31678), (9, 13200), (10, 13194), (11, 13196), (12, 1963), (13, 1963)]
INFO:root:### Best plan by std penalty: [0], overhead 63.630945444107056s
INFO:root:std_penalty: 	[(0, 3599.58344310661), (1, 6082.311161979495), (2, 34531.511787291565), (3, 32860.46945143904), (4, 32868.19440568953), (5, 32861.83347310778), (6, 10485.508243706692), (7, 6779.06627247364), (8, 6779.37973632498), (9, 10491.409216875569), (10, 10487.727767058266), (11, 10489.526964070477), (12, 4006.806365694374), (13, 4007.103560770927)]
INFO:root:### Best plan by prob of penalized: [12, 13], overhead 63.630945444107056s
INFO:root:std_penalty: 	[(0, 0.42), (1, 0.26), (2, 0.96), (3, 0.96), (4, 0.96), (5, 0.96), (6, 0.96), (7, 1.0), (8, 1.0), (9, 0.96), (10, 0.96), (11, 0.96), (12, 0.24), (13, 0.24)]
