INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 1.0
INFO:root:Recentered plan cost = 13970.18, plan is: /*+
SeqScan(k)
IndexScan(mk)
IndexScan(mc)
SeqScan(cn)
IndexScan(t)
NestLoop ( k mk )
NestLoop ( k mk mc )
HashJoin ( k mk mc cn )
NestLoop ( k mk mc cn t )
Leading ( ( ( ( ( k mk ) mc ) cn ) t ) ) */
INFO:root:Sobols samples size: 4096
INFO:root:[((1, 'k.txt'), 0.25291433438674865), ((6, 'mk_k_r.txt'), 0.19868492277723943), ((5, 'mc_cn_r.txt'), 0.00912434405389796), ((7, 'mk_mc__q2.txt'), 0.005928029618865735), ((0, 'cn.txt'), -0.0004986807308762894), ((9, 't_mk__k.txt'), -0.00021203792365483595), ((8, 't_mc__cn.txt'), -7.403135311574698e-05)]
INFO:root:Max absolute value 1: (1, 3) - Value: 0.4131814140486098
Max absolute value 2: (1, 2) - Value: -0.24283016283343828
Max absolute value 3: (1, 4) - Value: -0.24187743204485784
Max absolute value 4: (1, 6) - Value: -0.23855203541157896
Max absolute value 5: (1, 5) - Value: -0.2376871055169303

INFO:root:Sobols samples size: 2048
INFO:root:[((1, 'k.txt'), 0.4336203259705766), ((6, 'mk_k_r.txt'), 0.27748118996314747), ((7, 'mk_mc__q2.txt'), 0.004125691041559393), ((5, 'mc_cn_r.txt'), 0.00267891533532376), ((0, 'cn.txt'), -0.0018559398126131675), ((9, 't_mk__k.txt'), -0.00020220936750510904), ((8, 't_mc__cn.txt'), 2.724177150965366e-06)]
INFO:root:Max absolute value 1: (1, 4) - Value: -0.4155657755495662
Max absolute value 2: (1, 2) - Value: -0.41533027659612776
Max absolute value 3: (1, 6) - Value: -0.4061499011196023
Max absolute value 4: (1, 5) - Value: -0.40594622973431715
Max absolute value 5: (0, 3) - Value: 0.06479465396607886

INFO:root:Sobols samples size: 1024
INFO:root:[((1, 'k.txt'), 1.816087580641927), ((6, 'mk_k_r.txt'), 0.4033029177658754), ((0, 'cn.txt'), -0.015895037078973686), ((5, 'mc_cn_r.txt'), 0.008902422010319839), ((7, 'mk_mc__q2.txt'), 0.0030929346662703925), ((8, 't_mc__cn.txt'), -0.00071675055639482), ((9, 't_mk__k.txt'), 3.5406249927744e-05)]
INFO:root:Max absolute value 1: (1, 4) - Value: -1.9767829227069427
Max absolute value 2: (1, 2) - Value: -1.9726531106391858
Max absolute value 3: (1, 6) - Value: -1.926995878805102
Max absolute value 4: (1, 5) - Value: -1.9262790332375317
Max absolute value 5: (1, 3) - Value: 0.8088525455227136

INFO:root:Sobols samples size: 512
INFO:root:[((6, 'mk_k_r.txt'), 9.488007362314804), ((1, 'k.txt'), -0.5607896080200562), ((5, 'mc_cn_r.txt'), -0.1951052592448073), ((0, 'cn.txt'), -0.052681861861653294), ((7, 'mk_mc__q2.txt'), -0.049032429080181975), ((8, 't_mc__cn.txt'), -0.001443741510029204), ((9, 't_mk__k.txt'), 0.0003755434656399581)]
INFO:root:Max absolute value 1: (1, 3) - Value: 50.57420565487395
Max absolute value 2: (3, 4) - Value: -9.193577094018805
Max absolute value 3: (3, 5) - Value: -8.868377269749573
Max absolute value 4: (3, 6) - Value: -8.868265025534157
Max absolute value 5: (1, 6) - Value: 0.7033913682028169

INFO:root:Sobols samples size: 256
INFO:root:[((1, 'k.txt'), -2.540328569229575), ((5, 'mc_cn_r.txt'), -0.6117611887772912), ((6, 'mk_k_r.txt'), 0.6037941094181852), ((7, 'mk_mc__q2.txt'), 0.20193444540602049), ((9, 't_mk__k.txt'), -0.03525292824132154), ((0, 'cn.txt'), 0.031190464935931625), ((8, 't_mc__cn.txt'), -0.0006752552772284428)]
INFO:root:Max absolute value 1: (3, 5) - Value: 3.7836666244792894
Max absolute value 2: (3, 6) - Value: 3.7818934438095044
Max absolute value 3: (1, 4) - Value: 2.6324420234908192
Max absolute value 4: (1, 3) - Value: 2.6296022002620196
Max absolute value 5: (1, 6) - Value: 2.6272844312793

INFO:root:Sobols samples size: 128
INFO:root:[((1, 'k.txt'), -3.6555012538401668), ((5, 'mc_cn_r.txt'), -1.1323814600828381), ((6, 'mk_k_r.txt'), 0.6777731572081938), ((7, 'mk_mc__q2.txt'), 0.3669668569053657), ((0, 'cn.txt'), 0.03056831884650596), ((8, 't_mc__cn.txt'), -0.0013673491007732508), ((9, 't_mk__k.txt'), 0.0)]
INFO:root:Max absolute value 1: (3, 5) - Value: 4.464846237950349
Max absolute value 2: (3, 6) - Value: 4.461713643149698
Max absolute value 3: (1, 3) - Value: 3.656670961471368
Max absolute value 4: (1, 4) - Value: 3.656112834854837
Max absolute value 5: (1, 6) - Value: 3.6541687767451583

INFO:root:Sobol's solving time: 190.77901339530945(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 0
INFO:root:Instance id = None, Error div = 2, bandwidth = 1.0, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 9 plan: 	[(0, 4024.61), (1, 9873.76), (2, 4041.1), (3, 44500.38), (4, 48027.57), (5, 67680.62), (6, 50635.42), (7, 42758.53), (8, 40150.67)]
INFO:root:Sensitive predicates: [1, 5, 6]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [7], overhead 21.086180686950684s
INFO:root:exp_penalty_w_tol: 	[(0, 512619), (1, 84204), (2, 532285), (3, 26122), (4, 38783), (5, 90458), (6, 37761), (7, 24991), (8, 25167)]
INFO:root:### Best plan by std penalty: [7], overhead 21.086180686950684s
INFO:root:std_penalty: 	[(0, 2530759.035389286), (1, 469872.4249313375), (2, 2605058.99695757), (3, 17191.806308774634), (4, 33984.80666415401), (5, 84704.52202650665), (6, 26493.00162754768), (7, 16466.202297184773), (8, 37499.58741798066)]
INFO:root:### Best plan by prob of penalized: [1], overhead 21.086180686950684s
INFO:root:std_penalty: 	[(0, 0.64), (1, 0.52), (2, 0.64), (3, 0.76), (4, 0.88), (5, 0.98), (6, 0.86), (7, 0.78), (8, 0.72)]
