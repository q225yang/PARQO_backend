INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 0.5
INFO:root:Recentered plan cost = 10648.64, plan is: /*+
SeqScan(cn)
IndexScan(mc)
IndexScan(t)
IndexScan(mk)
IndexScan(k)
IndexScan(ci)
IndexOnlyScan(n)
IndexScan(an)
NestLoop ( cn mc )
NestLoop ( cn mc t )
NestLoop ( cn mc t mk )
NestLoop ( cn mc t mk k )
NestLoop ( cn mc t mk k ci )
NestLoop ( cn mc t mk k ci n )
NestLoop ( cn mc t mk k ci n an )
Leading ( ( ( ( ( ( ( ( cn mc ) t ) mk ) k ) ci ) n ) an ) ) */
INFO:root:Sobols samples size: 7680
INFO:root:[((14, 'mc_cn_r.txt'), 0.3750027296897214), ((13, 't_ci_l.txt'), 0.017499558098595446), ((15, 'mk_k_r.txt'), -0.014084425443670456), ((3, 'k.txt'), -0.011450879447096465), ((12, 'n_ci_pure.txt'), 0.010843462212801898), ((11, 'mk_ci_pure.txt'), 0.009402705698399324), ((17, 't_mc_l.txt'), 0.008616838030238739), ((16, 'mk_mc__q2.txt'), -0.006889898551006363), ((7, 't.txt'), 0.005888243379043747), ((2, 'cn.txt'), 0.004115135502266382), ((10, 'mc_ci_pure.txt'), -0.0017844542908659452), ((8, 'ci_an_pure.txt'), -0.0006710334498197777), ((9, 'n_an_pure.txt'), -4.726365098715774e-06), ((18, 't_mk_l.txt'), -2.841820049363737e-06)]
INFO:root:Max absolute value 1: (8, 9) - Value: 2.179286127538454
Max absolute value 2: (9, 11) - Value: 0.5127343342637207
Max absolute value 3: (9, 10) - Value: 0.4089350756292762
Max absolute value 4: (0, 9) - Value: 0.40495718065180714
Max absolute value 5: (9, 12) - Value: 0.30128343215343617

INFO:root:Sobols samples size: 3840
INFO:root:[((14, 'mc_cn_r.txt'), 0.3867772066523803), ((13, 't_ci_l.txt'), 0.11362994704901949), ((15, 'mk_k_r.txt'), -0.09333987907878688), ((12, 'n_ci_pure.txt'), 0.08149956258446456), ((17, 't_mc_l.txt'), 0.08002283953931609), ((11, 'mk_ci_pure.txt'), 0.06986084757053407), ((3, 'k.txt'), -0.06552470369120778), ((16, 'mk_mc__q2.txt'), -0.023784829271893883), ((10, 'mc_ci_pure.txt'), -0.013177529951740607), ((8, 'ci_an_pure.txt'), -0.006268904466886056), ((7, 't.txt'), 0.006223307749183052), ((2, 'cn.txt'), -0.00414586049070024), ((9, 'n_an_pure.txt'), -9.232784186761456e-05), ((18, 't_mk_l.txt'), 3.515439466411749e-06)]
INFO:root:Max absolute value 1: (9, 12) - Value: 1.9032684201889705
Max absolute value 2: (9, 10) - Value: 1.9000126805244426
Max absolute value 3: (9, 11) - Value: 1.5364032141218866
Max absolute value 4: (9, 13) - Value: 1.0057203000164556
Max absolute value 5: (2, 9) - Value: 0.647789672395066

INFO:root:Sobols samples size: 1920
INFO:root:[((14, 'mc_cn_r.txt'), 0.563586759384749), ((15, 'mk_k_r.txt'), -0.09902049553099346), ((3, 'k.txt'), -0.09291555652336392), ((2, 'cn.txt'), 0.036649994809844474), ((16, 'mk_mc__q2.txt'), -0.029776071246432965), ((17, 't_mc_l.txt'), 0.017076524590811274), ((10, 'mc_ci_pure.txt'), 0.010435449714164822), ((13, 't_ci_l.txt'), 0.010418852939563204), ((12, 'n_ci_pure.txt'), 0.007892502438364687), ((11, 'mk_ci_pure.txt'), 0.006000877137838394), ((7, 't.txt'), 0.0031736738070886365), ((8, 'ci_an_pure.txt'), 0.00042918003233611434), ((9, 'n_an_pure.txt'), -0.00012558381150223774), ((18, 't_mk_l.txt'), -1.6732326654630112e-06)]
INFO:root:Max absolute value 1: (9, 10) - Value: 1.4304721368469986
Max absolute value 2: (2, 9) - Value: 0.9319183262526478
Max absolute value 3: (9, 11) - Value: 0.531506981699208
Max absolute value 4: (0, 9) - Value: 0.14874255025129524
Max absolute value 5: (10, 11) - Value: 0.0973334205761466

INFO:root:Sobols samples size: 960
INFO:root:[((15, 'mk_k_r.txt'), -0.1733764939444166), ((3, 'k.txt'), -0.1623645627246681), ((14, 'mc_cn_r.txt'), 0.15341902560931292), ((2, 'cn.txt'), 0.059755242607899293), ((16, 'mk_mc__q2.txt'), -0.05620468178671424), ((17, 't_mc_l.txt'), 0.036917126824079334), ((13, 't_ci_l.txt'), 0.01824264633930333), ((10, 'mc_ci_pure.txt'), 0.0178026827283931), ((12, 'n_ci_pure.txt'), 0.01343204182474621), ((11, 'mk_ci_pure.txt'), 0.010108013628269725), ((8, 'ci_an_pure.txt'), 0.000883261095794432), ((7, 't.txt'), 0.000465522675711634), ((9, 'n_an_pure.txt'), -0.00012021804571873683), ((18, 't_mk_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (9, 10) - Value: 2.0949415823168547
Max absolute value 2: (9, 11) - Value: 1.0767669664548816
Max absolute value 3: (9, 13) - Value: 0.5208562031176085
Max absolute value 4: (9, 12) - Value: 0.42280050492151083
Max absolute value 5: (1, 9) - Value: 0.19569611078473942

INFO:root:Sobols samples size: 480
INFO:root:[((14, 'mc_cn_r.txt'), 0.2388728170365893), ((17, 't_mc_l.txt'), 0.04712370464904476), ((2, 'cn.txt'), 0.03910397304930109), ((16, 'mk_mc__q2.txt'), 0.035925842434395006), ((7, 't.txt'), 0.0037530123003152553), ((3, 'k.txt'), -0.000604608945220492), ((15, 'mk_k_r.txt'), -0.0005275797471303656), ((9, 'n_an_pure.txt'), -0.00040576692416147245), ((13, 't_ci_l.txt'), 0.00016859908904003052), ((10, 'mc_ci_pure.txt'), -6.137946715530817e-05), ((12, 'n_ci_pure.txt'), -4.8494603441770125e-05), ((11, 'mk_ci_pure.txt'), 2.811340813926987e-05), ((8, 'ci_an_pure.txt'), -2.7033175265657097e-05), ((18, 't_mk_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (1, 12) - Value: -0.1537276806701137
Max absolute value 2: (1, 10) - Value: -0.13967923435427068
Max absolute value 3: (1, 8) - Value: -0.13967811410886358
Max absolute value 4: (1, 6) - Value: -0.13967590050044304
Max absolute value 5: (1, 13) - Value: -0.1396757879061134

INFO:root:Sobols samples size: 240
INFO:root:[((14, 'mc_cn_r.txt'), 0.2418025619362392), ((17, 't_mc_l.txt'), 0.09765376244504959), ((2, 'cn.txt'), 0.06386855303107679), ((16, 'mk_mc__q2.txt'), 0.059869525410320465), ((7, 't.txt'), 0.0058903661505567235), ((3, 'k.txt'), -0.0011003027788835476), ((15, 'mk_k_r.txt'), 0.0008814997327714785), ((9, 'n_an_pure.txt'), -0.0008373327587956682), ((13, 't_ci_l.txt'), 0.0001731738962262132), ((10, 'mc_ci_pure.txt'), -6.185242396709315e-05), ((12, 'n_ci_pure.txt'), -4.955042105339518e-05), ((11, 'mk_ci_pure.txt'), 3.905650337757165e-05), ((8, 'ci_an_pure.txt'), 1.754916992822041e-05), ((18, 't_mk_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (2, 10) - Value: 0.10666903143182285
Max absolute value 2: (2, 5) - Value: 0.10659676146663286
Max absolute value 3: (2, 11) - Value: 0.1065923797386371
Max absolute value 4: (2, 13) - Value: 0.1065923341187292
Max absolute value 5: (2, 4) - Value: 0.1065923340231538

INFO:root:Sobols samples size: 120
INFO:root:[((14, 'mc_cn_r.txt'), 0.1514624522619951), ((17, 't_mc_l.txt'), 0.0011677194837764005), ((13, 't_ci_l.txt'), 0.00018205535741819395), ((10, 'mc_ci_pure.txt'), -9.406951580001e-05), ((3, 'k.txt'), 8.975294841045402e-05), ((11, 'mk_ci_pure.txt'), 6.7843630182455e-05), ((8, 'ci_an_pure.txt'), 6.038545531373054e-05), ((12, 'n_ci_pure.txt'), 5.0293302044784706e-05), ((15, 'mk_k_r.txt'), -3.9421453524052596e-05), ((7, 't.txt'), 2.400560449470442e-05), ((2, 'cn.txt'), 2.261541386181358e-05), ((16, 'mk_mc__q2.txt'), -5.607290670694442e-08), ((9, 'n_an_pure.txt'), -1.9287954550731924e-08), ((18, 't_mk_l.txt'), 0.0)]
INFO:root:Max absolute value 1: (9, 10) - Value: 0.4166893125814744
Max absolute value 2: (9, 13) - Value: 0.4166880403330393
Max absolute value 3: (9, 11) - Value: 0.4166880385420823
Max absolute value 4: (9, 12) - Value: 0.4152771055419299
Max absolute value 5: (12, 13) - Value: 0.3558583738488242

INFO:root:Sobol's solving time: 510.5967345237732(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 2
INFO:root:Instance id = None, Error div = 2, bandwidth = 0.5, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 6 plan: 	[(0, 41558.03), (1, 23143.67), (2, 13704.07), (3, 13704.55), (4, 36470.13), (5, 36470.13)]
INFO:root:Sensitive predicates: [13, 14]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [4], overhead 20.271830081939697s
INFO:root:exp_penalty_w_tol: 	[(0, 3361305), (1, 2006275), (2, 78795), (3, 78807), (4, 26205), (5, 26209)]
INFO:root:### Best plan by std penalty: [3], overhead 20.271830081939697s
INFO:root:std_penalty: 	[(0, 2384435.7502784724), (1, 1407694.3529264573), (2, 1809.8070875295077), (3, 1788.7002958117384), (4, 2921.9892346397246), (5, 2930.827987472407)]
INFO:root:### Best plan by prob of penalized: [0, 1, 2, 3, 4, 5], overhead 20.271830081939697s
INFO:root:std_penalty: 	[(0, 1.0), (1, 1.0), (2, 1.0), (3, 1.0), (4, 1.0), (5, 1.0)]
