INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 0.5
INFO:root:Recentered plan cost = 7057.57, plan is: /*+
SeqScan(k)
IndexScan(mk)
IndexScan(t)
IndexScan(mi)
NestLoop ( k mk )
NestLoop ( k mk t )
NestLoop ( k mk t mi )
Leading ( ( ( ( k mk ) t ) mi ) ) */
INFO:root:Sobols samples size: 4096
INFO:root:[((4, 'mk_k_r.txt'), 0.9998975994270477), ((0, 'k.txt'), -0.01469045583192812), ((3, 't.txt'), 5.4762740310433536e-05), ((7, 't_mk_l.txt'), 3.072322232328475e-05), ((6, 't_mi_both.txt'), -1.185585039000267e-07), ((1, 'mi.txt'), 1.0113714627377274e-07), ((5, 'mk_mi_r.txt'), -7.236482559081643e-08)]
INFO:root:Max absolute value 1: (0, 3) - Value: 2.8297850629278294
Max absolute value 2: (3, 6) - Value: -0.6266817601818744
Max absolute value 3: (3, 4) - Value: -0.6263377305797136
Max absolute value 4: (3, 5) - Value: -0.626337590211903
Max absolute value 5: (0, 2) - Value: 0.2801868060664512

INFO:root:Sobols samples size: 2048
INFO:root:[((4, 'mk_k_r.txt'), 1.8529743143845732), ((0, 'k.txt'), -0.007013610662098943), ((3, 't.txt'), 0.00010348911631477193), ((7, 't_mk_l.txt'), 4.706972712828639e-06), ((1, 'mi.txt'), 3.2364797304891216e-09), ((5, 'mk_mi_r.txt'), 7.200070571444609e-10), ((6, 't_mi_both.txt'), 7.200070571444609e-10)]
INFO:root:Max absolute value 1: (0, 3) - Value: 3.2712138348672983
Max absolute value 2: (3, 6) - Value: -1.3581952132779231
Max absolute value 3: (3, 4) - Value: -1.3581592183605675
Max absolute value 4: (3, 5) - Value: -1.3581592183605675
Max absolute value 5: (0, 2) - Value: 0.23699914080032466

INFO:root:Sobols samples size: 1024
INFO:root:[((4, 'mk_k_r.txt'), 0.13994502801766032), ((0, 'k.txt'), -0.014434453401047173), ((3, 't.txt'), -0.00012296617709062405), ((7, 't_mk_l.txt'), 1.1665681668463839e-05), ((1, 'mi.txt'), 6.031893310407251e-09), ((5, 'mk_mi_r.txt'), 0.0), ((6, 't_mi_both.txt'), 0.0)]
INFO:root:Max absolute value 1: (0, 3) - Value: 1.0980016359742188
Max absolute value 2: (3, 4) - Value: 0.7905227104277719
Max absolute value 3: (3, 5) - Value: 0.7905227104277719
Max absolute value 4: (3, 6) - Value: 0.7904355564728865
Max absolute value 5: (0, 2) - Value: 0.6490189371955487

INFO:root:Sobols samples size: 512
INFO:root:[((4, 'mk_k_r.txt'), 0.3077744490836535), ((0, 'k.txt'), 0.06857710457484292), ((3, 't.txt'), -0.0001759308469375803), ((7, 't_mk_l.txt'), 1.8313645527367904e-05), ((1, 'mi.txt'), 0.0), ((5, 'mk_mi_r.txt'), 0.0), ((6, 't_mi_both.txt'), 0.0)]
INFO:root:Max absolute value 1: (0, 3) - Value: 2.536662384821211
Max absolute value 2: (0, 2) - Value: 1.459333282069113
Max absolute value 3: (0, 6) - Value: 1.4588398052848013
Max absolute value 4: (0, 1) - Value: 1.458839805284801
Max absolute value 5: (0, 4) - Value: 1.458839805284801

INFO:root:Sobols samples size: 256
INFO:root:[((0, 'k.txt'), 0.040687822340784746), ((4, 'mk_k_r.txt'), 0.035065477447884776), ((3, 't.txt'), -0.00030606218963036774), ((7, 't_mk_l.txt'), 3.486643545841143e-05), ((1, 'mi.txt'), 0.0), ((5, 'mk_mi_r.txt'), 0.0), ((6, 't_mi_both.txt'), 0.0)]
INFO:root:Max absolute value 1: (0, 3) - Value: 0.024915570435512506
Max absolute value 2: (3, 4) - Value: 0.02308450204179032
Max absolute value 3: (3, 5) - Value: 0.02308450204179032
Max absolute value 4: (3, 6) - Value: 0.023084502041790318
Max absolute value 5: (0, 2) - Value: 0.01204731346047022

INFO:root:Sobols samples size: 128
INFO:root:[((0, 'k.txt'), 0.0854027137190954), ((4, 'mk_k_r.txt'), 0.0854027137190954), ((3, 't.txt'), -0.0006424168229578916), ((7, 't_mk_l.txt'), 7.318376935781616e-05), ((1, 'mi.txt'), 0.0), ((5, 'mk_mi_r.txt'), 0.0), ((6, 't_mi_both.txt'), 0.0)]
INFO:root:Max absolute value 1: (0, 3) - Value: 0.03665256938468742
Max absolute value 2: (0, 1) - Value: 0.03665256938468739
Max absolute value 3: (0, 2) - Value: 0.03665256938468739
Max absolute value 4: (0, 4) - Value: 0.03665256938468739
Max absolute value 5: (0, 5) - Value: 0.03665256938468739

INFO:root:Sobol's solving time: 185.3145468235016(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 1
INFO:root:Instance id = None, Error div = 2, bandwidth = 0.5, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 3 plan: 	[(0, 4007.75), (1, 3940.01), (2, 44964.04)]
INFO:root:Sensitive predicates: [0, 4]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [1], overhead 6.996085166931152s
INFO:root:exp_penalty_w_tol: 	[(0, 77055), (1, 8359), (2, 25851)]
INFO:root:### Best plan by std penalty: [2], overhead 6.996085166931152s
INFO:root:std_penalty: 	[(0, 149360.83049174512), (1, 31729.098612476624), (2, 14505.404170690177)]
INFO:root:### Best plan by prob of penalized: [1], overhead 6.996085166931152s
INFO:root:std_penalty: 	[(0, 0.82), (1, 0.1), (2, 0.82)]
