INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 0.5
INFO:root:Recentered plan cost = 33941.59, plan is: /*+
SeqScan(mi_idx)
SeqScan(it)
SeqScan(k)
IndexScan(mk)
IndexScan(t)
HashJoin ( mi_idx it )
NestLoop ( k mk )
HashJoin ( mi_idx it k mk )
NestLoop ( mi_idx it k mk t )
Leading ( ( ( ( mi_idx it ) ( k mk ) ) t ) ) */
INFO:root:Sobols samples size: 4608
INFO:root:[((1, 'k.txt'), 0.2206863952426215), ((5, 'mi_idx_it_both.txt'), 0.07809572841744951), ((6, 'mk_k_r.txt'), 0.04455752688422128), ((7, 'mk_mi_idx_r.txt'), 0.03953971640814658), ((2, 'mi_idx.txt'), 0.015591468977197546), ((9, 't_mk_l.txt'), -0.005103126729523226), ((8, 't_mi_idx_both.txt'), 0.0020822031455197316), ((4, 't.txt'), 0.001667318604971694)]
INFO:root:Max absolute value 1: (0, 3) - Value: -0.21791888180076702
Max absolute value 2: (3, 5) - Value: 0.16069674220289681
Max absolute value 3: (0, 6) - Value: -0.12614266258682658
Max absolute value 4: (4, 7) - Value: 0.1180748240082635
Max absolute value 5: (0, 7) - Value: -0.11690646667362187

INFO:root:Sobols samples size: 2304
INFO:root:[((1, 'k.txt'), 0.4758411039128979), ((5, 'mi_idx_it_both.txt'), 0.1422899014790869), ((6, 'mk_k_r.txt'), 0.07157087658294209), ((7, 'mk_mi_idx_r.txt'), -0.041277223908226905), ((9, 't_mk_l.txt'), -0.014284944650454616), ((8, 't_mi_idx_both.txt'), 0.004417590555008722), ((4, 't.txt'), -0.003354680216840642), ((2, 'mi_idx.txt'), 0.0007571381024508095)]
INFO:root:Max absolute value 1: (0, 3) - Value: -0.48756433402633514
Max absolute value 2: (0, 4) - Value: -0.41885401112318793
Max absolute value 3: (0, 1) - Value: -0.40350883582819586
Max absolute value 4: (0, 6) - Value: -0.37830576660704784
Max absolute value 5: (0, 2) - Value: -0.3667363036062703

INFO:root:Sobols samples size: 1152
INFO:root:[((1, 'k.txt'), 0.5024516132014765), ((5, 'mi_idx_it_both.txt'), 0.10425100935052246), ((6, 'mk_k_r.txt'), 0.10419864277191157), ((9, 't_mk_l.txt'), -0.0273844849541566), ((4, 't.txt'), -0.007454381110742985), ((2, 'mi_idx.txt'), 0.004460938431912809), ((8, 't_mi_idx_both.txt'), 0.002736244678433389), ((7, 'mk_mi_idx_r.txt'), 1.4864245503233223e-05)]
INFO:root:Max absolute value 1: (0, 3) - Value: -0.48759840919597186
Max absolute value 2: (0, 4) - Value: -0.4662810067837937
Max absolute value 3: (0, 1) - Value: -0.394140990461899
Max absolute value 4: (0, 6) - Value: -0.37296567657971524
Max absolute value 5: (0, 2) - Value: -0.3622949654360634

INFO:root:Sobols samples size: 576
INFO:root:[((6, 'mk_k_r.txt'), 0.10561044427881199), ((5, 'mi_idx_it_both.txt'), 0.0823465530200561), ((1, 'k.txt'), 0.035398241002951115), ((2, 'mi_idx.txt'), 0.014622296661266328), ((7, 'mk_mi_idx_r.txt'), 0.011114528656258834), ((8, 't_mi_idx_both.txt'), 0.003445724263815637), ((9, 't_mk_l.txt'), -0.0004666200013773093), ((4, 't.txt'), -0.0003546187641717455)]
INFO:root:Max absolute value 1: (0, 5) - Value: 0.18325716295526392
Max absolute value 2: (0, 7) - Value: 0.17924156262679075
Max absolute value 3: (0, 2) - Value: 0.1787892580900778
Max absolute value 4: (0, 6) - Value: 0.17610026210674953
Max absolute value 5: (4, 5) - Value: -0.1757301408689408

INFO:root:Sobols samples size: 288
INFO:root:[((6, 'mk_k_r.txt'), 0.4021456267331613), ((1, 'k.txt'), -0.3318083696572134), ((5, 'mi_idx_it_both.txt'), 0.23092948806036573), ((7, 'mk_mi_idx_r.txt'), 0.14047400175392577), ((2, 'mi_idx.txt'), -0.052308602022028715), ((8, 't_mi_idx_both.txt'), 0.027643203636453232), ((4, 't.txt'), -0.012102921238216659), ((9, 't_mk_l.txt'), -0.005359589956922651)]
INFO:root:Max absolute value 1: (0, 1) - Value: 0.6223083417686319
Max absolute value 2: (0, 7) - Value: 0.622121039263111
Max absolute value 3: (0, 2) - Value: 0.6208749425839162
Max absolute value 4: (0, 6) - Value: 0.6024122284398293
Max absolute value 5: (0, 5) - Value: 0.5496387194655293

INFO:root:Sobols samples size: 144
INFO:root:[((1, 'k.txt'), -1.1982065658885717), ((6, 'mk_k_r.txt'), 0.47328234567793154), ((5, 'mi_idx_it_both.txt'), 0.3087361239089335), ((7, 'mk_mi_idx_r.txt'), 0.20037827667866653), ((8, 't_mi_idx_both.txt'), 0.03917417966102633), ((2, 'mi_idx.txt'), -0.025968845840498883), ((4, 't.txt'), -0.022253921172686562), ((9, 't_mk_l.txt'), -0.002775711906181625)]
INFO:root:Max absolute value 1: (0, 2) - Value: 1.3419301175670253
Max absolute value 2: (0, 1) - Value: 1.3382392750381404
Max absolute value 3: (0, 7) - Value: 1.3291228088792186
Max absolute value 4: (0, 6) - Value: 1.31154030093728
Max absolute value 5: (0, 5) - Value: 1.2396832836626754

INFO:root:Sobol's solving time: 216.5245280265808(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 2
INFO:root:Instance id = None, Error div = 2, bandwidth = 0.5, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 22 plan: 	[(0, 13306.82), (1, 13367.29), (2, 13300.21), (3, 35062.9), (4, 77447.35), (5, 37745.0), (6, 29954.63), (7, 31509.09), (8, 119753.92), (9, 31534.32), (10, 114710.55), (11, 119686.79), (12, 81582.68), (13, 83809.9), (14, 49288.89), (15, 49309.28), (16, 66601.39), (17, 116672.7), (18, 69547.62), (19, 111912.38), (20, 61964.19), (21, 76740.87)]
INFO:root:Sensitive predicates: [1, 5, 6]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [7], overhead 51.7276668548584s
INFO:root:exp_penalty_w_tol: 	[(0, 58328), (1, 49605), (2, 56672), (3, 112479), (4, 64772), (5, 501798), (6, 231304), (7, 16906), (8, 81984), (9, 39324), (10, 76262), (11, 81529), (12, 49913), (13, 56705), (14, 36006), (15, 33943), (16, 39837), (17, 78550), (18, 126393), (19, 77867), (20, 43942), (21, 45855)]
INFO:root:### Best plan by std penalty: [13], overhead 51.7276668548584s
INFO:root:std_penalty: 	[(0, 147627.70480563163), (1, 83569.43573916549), (2, 145669.1927005149), (3, 120764.42367381556), (4, 26418.22100104593), (5, 543473.0441277979), (6, 254251.0116906336), (7, 56016.20116900393), (8, 23869.87123596198), (9, 48573.73391168611), (10, 24485.56069607283), (11, 23902.61788986097), (12, 17875.541128360954), (13, 17240.819175991885), (14, 37326.27294822161), (15, 20864.751802988474), (16, 26866.36882191904), (17, 24741.12806875721), (18, 97138.66571426498), (19, 23077.44387424032), (20, 20142.579307230684), (21, 17705.099871987648)]
INFO:root:### Best plan by prob of penalized: [7], overhead 51.7276668548584s
INFO:root:std_penalty: 	[(0, 0.74), (1, 0.64), (2, 0.74), (3, 0.92), (4, 1.0), (5, 0.84), (6, 0.92), (7, 0.5), (8, 0.98), (9, 0.9), (10, 0.96), (11, 0.98), (12, 0.96), (13, 0.98), (14, 0.92), (15, 0.88), (16, 0.94), (17, 0.96), (18, 1.0), (19, 0.98), (20, 0.96), (21, 0.94)]
