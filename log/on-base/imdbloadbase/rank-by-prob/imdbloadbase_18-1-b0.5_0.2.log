INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Sobol: Sample size N = 256, b = 0.5
INFO:root:Recentered plan cost = 323974.37, plan is: /*+
IndexScan(t)
SeqScan(mi_idx)
SeqScan(it2)
IndexScan(ci)
IndexScan(n)
IndexScan(mi)
SeqScan(it1)
HashJoin ( mi_idx it2 )
MergeJoin ( t mi_idx it2 )
NestLoop ( t mi_idx it2 ci )
NestLoop ( t mi_idx it2 ci n )
NestLoop ( t mi_idx it2 ci n mi )
HashJoin ( t mi_idx it2 ci n mi it1 )
Leading ( ( ( ( ( ( t ( mi_idx it2 ) ) ci ) n ) mi ) it1 ) ) */
INFO:root:Sobols samples size: 6144
INFO:root:[((9, 'n_ci_both.txt'), 0.26780259163744496), ((12, 'mi_idx_it_r.txt'), 0.2463063476923123), ((15, 't_mi_idx__it.txt'), 0.05355883250729021), ((8, 'mi_idx_ci_r.txt'), 0.045409152078298216), ((10, 't_ci_r.txt'), 0.020907609348507807), ((0, 'ci.txt'), 0.015193967545418133), ((5, 'n.txt'), -0.013654808473964846), ((11, 'mi_it_r.txt'), -0.002304337372165735), ((14, 't_mi__it.txt'), -0.000970759886283201), ((13, 'mi_idx_mi__it.txt'), -0.0005871061313280203), ((7, 'mi_mc_pure.txt'), -0.00033190345338863846)]
INFO:root:Max absolute value 1: (4, 8) - Value: -0.30945360651484816
Max absolute value 2: (4, 9) - Value: -0.3090924813957508
Max absolute value 3: (4, 6) - Value: -0.3058434310773691
Max absolute value 4: (4, 5) - Value: -0.29436875498124115
Max absolute value 5: (4, 7) - Value: -0.29020943464505256

INFO:root:Sobols samples size: 3072
INFO:root:[((9, 'n_ci_both.txt'), 0.47329983067914877), ((12, 'mi_idx_it_r.txt'), 0.25450830053471035), ((8, 'mi_idx_ci_r.txt'), 0.10848572258865502), ((5, 'n.txt'), -0.051895703033391125), ((10, 't_ci_r.txt'), 0.014453960954251532), ((0, 'ci.txt'), -0.004878841292270703), ((11, 'mi_it_r.txt'), 0.003413971974346593), ((15, 't_mi_idx__it.txt'), 0.003354939705977973), ((7, 'mi_mc_pure.txt'), -0.0004395974015819727), ((13, 'mi_idx_mi__it.txt'), 0.00018004285487129357), ((14, 't_mi__it.txt'), 8.538912443890928e-05)]
INFO:root:Max absolute value 1: (4, 9) - Value: -0.5627282830424459
Max absolute value 2: (4, 8) - Value: -0.5624732669055488
Max absolute value 3: (4, 6) - Value: -0.5620986983007962
Max absolute value 4: (4, 7) - Value: -0.554574404591377
Max absolute value 5: (4, 5) - Value: -0.5499409738229856

INFO:root:Sobols samples size: 1536
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.4999281656319255), ((15, 't_mi_idx__it.txt'), 0.1535328180801416), ((10, 't_ci_r.txt'), 0.1465782772765026), ((5, 'n.txt'), -0.0491959264212926), ((8, 'mi_idx_ci_r.txt'), -0.04340816238819453), ((0, 'ci.txt'), -0.026274960576221956), ((9, 'n_ci_both.txt'), 0.015962396517927104), ((11, 'mi_it_r.txt'), 0.002110203629027569), ((13, 'mi_idx_mi__it.txt'), 0.002008588642925733), ((14, 't_mi__it.txt'), 0.0007572233968506979), ((7, 'mi_mc_pure.txt'), 0.0007262779192677859)]
INFO:root:Max absolute value 1: (7, 10) - Value: 0.3187873245749421
Max absolute value 2: (4, 8) - Value: 0.26675150262647557
Max absolute value 3: (4, 6) - Value: 0.2658477527656591
Max absolute value 4: (4, 9) - Value: 0.26577155943354414
Max absolute value 5: (4, 7) - Value: 0.23701911324457686

INFO:root:Sobols samples size: 768
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.6934796490351706), ((15, 't_mi_idx__it.txt'), 0.20997906237761332), ((9, 'n_ci_both.txt'), 0.095461466197123), ((10, 't_ci_r.txt'), 0.05402870544913895), ((0, 'ci.txt'), 0.05325616867828344), ((5, 'n.txt'), -0.03914409359978144), ((8, 'mi_idx_ci_r.txt'), -0.015885733833064356), ((11, 'mi_it_r.txt'), 0.005172732428502852), ((13, 'mi_idx_mi__it.txt'), 0.0032023789028928435), ((14, 't_mi__it.txt'), 0.001168687763180778), ((7, 'mi_mc_pure.txt'), 0.0006635080487040936)]
INFO:root:Max absolute value 1: (7, 10) - Value: 0.26742313470641044
Max absolute value 2: (4, 9) - Value: -0.11169081462372592
Max absolute value 3: (4, 8) - Value: -0.11167001385667064
Max absolute value 4: (4, 6) - Value: -0.11141374055326056
Max absolute value 5: (4, 5) - Value: -0.10954779941366186

INFO:root:Sobols samples size: 384
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.7447455715221919), ((15, 't_mi_idx__it.txt'), 0.2138547488522637), ((9, 'n_ci_both.txt'), 0.12267608485336416), ((5, 'n.txt'), -0.10828436776357424), ((8, 'mi_idx_ci_r.txt'), 0.06584796944246278), ((10, 't_ci_r.txt'), 0.028577241904395007), ((0, 'ci.txt'), 0.02765716226555057), ((11, 'mi_it_r.txt'), 0.001377033360911239), ((7, 'mi_mc_pure.txt'), 0.0009328002436925636), ((13, 'mi_idx_mi__it.txt'), -4.419418384172365e-05), ((14, 't_mi__it.txt'), 0.0)]
INFO:root:Max absolute value 1: (7, 10) - Value: 0.14558666924660452
Max absolute value 2: (4, 8) - Value: -0.14185587804257083
Max absolute value 3: (4, 9) - Value: -0.14185587780164127
Max absolute value 4: (4, 6) - Value: -0.14132691688969512
Max absolute value 5: (4, 5) - Value: -0.13919980892561945

INFO:root:Sobols samples size: 192
INFO:root:[((12, 'mi_idx_it_r.txt'), 0.5985764099596098), ((15, 't_mi_idx__it.txt'), 0.2898960048557829), ((0, 'ci.txt'), 0.05504728830775314), ((5, 'n.txt'), 0.02373510538841444), ((9, 'n_ci_both.txt'), -0.02316064213850763), ((8, 'mi_idx_ci_r.txt'), -0.013375421517522567), ((10, 't_ci_r.txt'), -0.005819507606916005), ((7, 'mi_mc_pure.txt'), -0.0003159711557128255), ((11, 'mi_it_r.txt'), 0.0002413468731713091), ((13, 'mi_idx_mi__it.txt'), -1.6617699729444871e-09), ((14, 't_mi__it.txt'), 0.0)]
INFO:root:Max absolute value 1: (7, 10) - Value: 0.227357754924361
Max absolute value 2: (7, 8) - Value: 0.1889074729948447
Max absolute value 3: (7, 9) - Value: 0.18890746766129707
Max absolute value 4: (3, 7) - Value: 0.14264996778418926
Max absolute value 5: (4, 10) - Value: 0.10962415654037078

INFO:root:Sobol's solving time: 347.481360912323(s)
INFO:root:
########## Robust Query Optimization ############ 

INFO:root:Original optimal plan id is 2
INFO:root:Instance id = None, Error div = 2, bandwidth = 0.5, tolerance = 0.2, have 50 samples.
INFO:root:Cost of 11 plan: 	[(0, 434316.15), (1, 682674.43), (2, 368007.46), (3, 374562.9), (4, 368608.54), (5, 457985.54), (6, 565688.7), (7, 566289.78), (8, 638750.52), (9, 379966.08), (10, 396353.87)]
INFO:root:Sensitive predicates: [9, 12]
INFO:root:The number of samples to calculate expected penalty = 50.
INFO:root:### Best plan by exp penalty: [7], overhead 31.027666568756104s
INFO:root:exp_penalty_w_tol: 	[(0, 240796), (1, 282627), (2, 223247), (3, 201315), (4, 211326), (5, 327770), (6, 200502), (7, 199608), (8, 253413), (9, 607784), (10, 581287)]
INFO:root:### Best plan by std penalty: [3], overhead 31.027666568756104s
INFO:root:std_penalty: 	[(0, 866067.8441353278), (1, 210555.61849333337), (2, 853421.9970946735), (3, 135473.3181866625), (4, 788007.3309765953), (5, 884758.7561250228), (6, 193705.28091030093), (7, 188834.76623675553), (8, 204755.87961032268), (9, 2186186.345283296), (10, 338654.8409141377)]
INFO:root:### Best plan by prob of penalized: [0, 2, 4], overhead 31.027666568756104s
INFO:root:std_penalty: 	[(0, 0.26), (1, 0.86), (2, 0.26), (3, 0.8), (4, 0.26), (5, 0.94), (6, 0.74), (7, 0.74), (8, 0.84), (9, 0.84), (10, 1.0)]
